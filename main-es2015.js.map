{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/article/article.module.ts","./src/app/article/components/article/article.component.ts","./src/app/article/components/article/article.component.html","./src/app/article/services/article.service.ts","./src/app/article/store/actionTypes.ts","./src/app/article/store/actions/deleteArticle.action.ts","./src/app/article/store/actions/getArticle.action.ts","./src/app/article/store/effects/deleteArticle.effect.ts","./src/app/article/store/effects/getArticle.effect.ts","./src/app/article/store/reducers.ts","./src/app/article/store/selectors.ts","./src/app/auth/auth.module.ts","./src/app/auth/components/login/login.component.ts","./src/app/auth/components/login/login.component.html","./src/app/auth/components/register/register.component.ts","./src/app/auth/components/register/register.component.html","./src/app/auth/services/auth.service.ts","./src/app/auth/store/actionTypes.ts","./src/app/auth/store/actions/getCurrentUser.action.ts","./src/app/auth/store/actions/login.action.ts","./src/app/auth/store/actions/register.action.ts","./src/app/auth/store/actions/sync.action.ts","./src/app/auth/store/actions/updateCurrentUser.action.ts","./src/app/auth/store/effects/getCurrentUser.effect.ts","./src/app/auth/store/effects/login.effect.ts","./src/app/auth/store/effects/logout.effect.ts","./src/app/auth/store/effects/register.effect.ts","./src/app/auth/store/effects/updateCurrentUser.effect.ts","./src/app/auth/store/reducers.ts","./src/app/auth/store/selectors.ts","./src/app/createArticle/components/createArticle/createArticle.component.ts","./src/app/createArticle/components/createArticle/createArticle.component.html","./src/app/createArticle/createArticle.module.ts","./src/app/createArticle/services/createArticle.service.ts","./src/app/createArticle/store/actions/createArticle.action.ts","./src/app/createArticle/store/actionsTypes.ts","./src/app/createArticle/store/effects/createArticle.effect.ts","./src/app/createArticle/store/reducers.ts","./src/app/createArticle/store/selectors.ts","./src/app/editArticle/components/editArticle/editArticle.component.ts","./src/app/editArticle/components/editArticle/editArticle.component.html","./src/app/editArticle/editArticle.module.ts","./src/app/editArticle/services/editArticle.service.ts","./src/app/editArticle/store/actions/getArticle.action.ts","./src/app/editArticle/store/actions/updateArticle.action.ts","./src/app/editArticle/store/actionsTypes.ts","./src/app/editArticle/store/effects/getArticle.effect.ts","./src/app/editArticle/store/effects/updateArticle.effect.ts","./src/app/editArticle/store/reducers.ts","./src/app/editArticle/store/selectors.ts","./src/app/globalFeed/components/globalFeed/globalFeed.component.ts","./src/app/globalFeed/components/globalFeed/globalFeed.component.html","./src/app/globalFeed/globalFeed.module.ts","./src/app/settings/components/settings/settings.component.ts","./src/app/settings/components/settings/settings.component.html","./src/app/settings/settings.module.ts","./src/app/settings/store/reducers.ts","./src/app/settings/store/selectors.ts","./src/app/shared/modules/addToFavorites/addToFavorites.module.ts","./src/app/shared/modules/addToFavorites/components/addToFavorites/addToFavorites.component.ts","./src/app/shared/modules/addToFavorites/components/addToFavorites/addToFavorites.component.html","./src/app/shared/modules/addToFavorites/services/addToFavorites.service.ts","./src/app/shared/modules/addToFavorites/store/actionTypes.ts","./src/app/shared/modules/addToFavorites/store/actions/addToFavorites.action.ts","./src/app/shared/modules/addToFavorites/store/effects/addToFavorites.effect.ts","./src/app/shared/modules/articleForm/articleForm.module.ts","./src/app/shared/modules/articleForm/components/articleForm/articleForm.component.ts","./src/app/shared/modules/articleForm/components/articleForm/articleForm.component.html","./src/app/shared/modules/backendErrorMessages/backendErrorMessages.module.ts","./src/app/shared/modules/backendErrorMessages/components/backendErrorMessages/backendErrorMessages.component.ts","./src/app/shared/modules/backendErrorMessages/components/backendErrorMessages/backendErrorMessages.component.html","./src/app/shared/modules/banner/banner.module.ts","./src/app/shared/modules/banner/components/banner/banner.component.ts","./src/app/shared/modules/banner/components/banner/banner.component.html","./src/app/shared/modules/errorMessage/components/errorMessage/errorMessage.component.ts","./src/app/shared/modules/errorMessage/errorMessage.module.ts","./src/app/shared/modules/feed/components/feed/feed.component.ts","./src/app/shared/modules/feed/components/feed/feed.component.html","./src/app/shared/modules/feed/feed.module.ts","./src/app/shared/modules/feed/services/feed.service.ts","./src/app/shared/modules/feed/store/actionTypes.ts","./src/app/shared/modules/feed/store/actions/getFeed.action.ts","./src/app/shared/modules/feed/store/effects/getFeed.effect.ts","./src/app/shared/modules/feed/store/reducers.ts","./src/app/shared/modules/feed/store/selectors.ts","./src/app/shared/modules/feedToggler/components/feedToggler/feedToggler.component.ts","./src/app/shared/modules/feedToggler/components/feedToggler/feedToggler.component.html","./src/app/shared/modules/feedToggler/feedToggler.module.ts","./src/app/shared/modules/loading/components/loading/loading.component.ts","./src/app/shared/modules/loading/loading.module.ts","./src/app/shared/modules/pagination/components/pagination/pagination.component.ts","./src/app/shared/modules/pagination/components/pagination/pagination.component.html","./src/app/shared/modules/pagination/pagination.module.ts","./src/app/shared/modules/popularTags/components/popularTags/popularTags.component.ts","./src/app/shared/modules/popularTags/components/popularTags/popularTags.component.html","./src/app/shared/modules/popularTags/popularTags.module.ts","./src/app/shared/modules/popularTags/services/popularTags.service.ts","./src/app/shared/modules/popularTags/store/actionTypes.ts","./src/app/shared/modules/popularTags/store/actions/getPopularTags.action.ts","./src/app/shared/modules/popularTags/store/effects/getPopularTags.effect.ts","./src/app/shared/modules/popularTags/store/reducers.ts","./src/app/shared/modules/popularTags/store/selectors.ts","./src/app/shared/modules/tagList/components/tagList/tagList.component.ts","./src/app/shared/modules/tagList/components/tagList/tagList.component.html","./src/app/shared/modules/tagList/tagList.module.ts","./src/app/shared/modules/topBar/components/topBar/topBar.component.ts","./src/app/shared/modules/topBar/components/topBar/topBar.component.html","./src/app/shared/modules/topBar/topBar.module.ts","./src/app/shared/services/article.service.ts","./src/app/shared/services/authinterceptor.service.ts","./src/app/shared/services/persistance.service.ts","./src/app/shared/services/utils.service.ts","./src/app/tagFeed/components/tagFeed/tagFeed.component.ts","./src/app/tagFeed/components/tagFeed/tagFeed.component.html","./src/app/tagFeed/tagFeed.module.ts","./src/app/userProfile/components/userProfile/userProfile.component.ts","./src/app/userProfile/components/userProfile/userProfile.component.html","./src/app/userProfile/services/userProfile.service.ts","./src/app/userProfile/store/actionTypes.ts","./src/app/userProfile/store/actions/getUserProfile.action.ts","./src/app/userProfile/store/effects/getUserProfile.effect.ts","./src/app/userProfile/store/reducers.ts","./src/app/userProfile/store/selectors.ts","./src/app/userProfile/userProfile.module.ts","./src/app/yourFeed/components/yourFeed/yourFeed.component.ts","./src/app/yourFeed/components/yourFeed/yourFeed.component.html","./src/app/yourFeed/yourFeed.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core'\nimport {Routes, RouterModule} from '@angular/router'\n\nconst routes: Routes = []\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import {Component, OnInit} from '@angular/core'\nimport {Store} from '@ngrx/store'\n\nimport {getCurrentUserAction} from 'src/app/auth/store/actions/getCurrentUser.action'\n\n@Component({\n  selector: ' app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  constructor(private store: Store) {}\n\n  ngOnInit(): void {\n    this.store.dispatch(getCurrentUserAction())\n  }\n}\n","<mc-topbar></mc-topbar>\n<router-outlet></router-outlet>\n","import {BrowserModule} from '@angular/platform-browser'\nimport {NgModule} from '@angular/core'\nimport {StoreModule} from '@ngrx/store'\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools'\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http'\nimport {routerReducer, StoreRouterConnectingModule} from '@ngrx/router-store'\n\nimport {AppRoutingModule} from './app-routing.module'\nimport {AppComponent} from './app.component'\nimport {AuthModule} from 'src/app/auth/auth.module'\nimport {environment} from 'src/environments/environment'\nimport {EffectsModule} from '@ngrx/effects'\nimport {TopBarModule} from 'src/app/shared/modules/topBar/topBar.module'\nimport {PersistanceService} from './shared/services/persistance.service'\nimport {AuthInterceptor} from './shared/services/authinterceptor.service'\nimport {GlobalFeedModule} from './globalFeed/globalFeed.module'\nimport {YourFeedModule} from './yourFeed/yourFeed.module'\nimport {TagFeedModule} from 'src/app/tagFeed/tagFeed.module'\nimport {ArticleModule} from './article/article.module'\nimport {CreateArticleModule} from './createArticle/createArticle.module'\nimport {EditArticleModule} from 'src/app/editArticle/editArticle.module'\nimport {SettingsModule} from './settings/settings.module'\nimport {UserProfileModule} from './userProfile/userProfile.module'\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    AuthModule,\n    StoreModule.forRoot({router: routerReducer}),\n    StoreRouterConnectingModule.forRoot(),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25,\n      logOnly: environment.production\n    }),\n    EffectsModule.forRoot([]),\n    TopBarModule,\n    GlobalFeedModule,\n    YourFeedModule,\n    TagFeedModule,\n    CreateArticleModule,\n    ArticleModule,\n    EditArticleModule,\n    SettingsModule,\n    UserProfileModule\n  ],\n  providers: [\n    PersistanceService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import {NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\nimport {RouterModule} from '@angular/router'\nimport {StoreModule} from '@ngrx/store'\nimport {EffectsModule} from '@ngrx/effects'\n\nimport {ArticleComponent} from './components/article/article.component'\nimport {ArticleService as SharedArticleService} from '../shared/services/article.service'\nimport {reducers} from 'src/app/article/store/reducers'\nimport {GetArticleEffect} from 'src/app/article/store/effects/getArticle.effect'\nimport {LoadingModule} from 'src/app/shared/modules/loading/loading.module'\nimport {ErrorMessageModule} from 'src/app/shared/modules/errorMessage/errorMessage.module'\nimport {TagListModule} from 'src/app/shared/modules/tagList/tagList.module'\nimport {DeleteArticleEffect} from './store/effects/deleteArticle.effect'\nimport {ArticleService} from 'src/app/article/services/article.service'\n\nconst routes = [\n  {\n    path: 'articles/:slug',\n    component: ArticleComponent\n  }\n]\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    StoreModule.forFeature('article', reducers),\n    EffectsModule.forFeature([GetArticleEffect, DeleteArticleEffect]),\n    LoadingModule,\n    ErrorMessageModule,\n    TagListModule\n  ],\n  declarations: [ArticleComponent],\n  providers: [ArticleService, SharedArticleService]\n})\nexport class ArticleModule {}\n","import {Component, OnInit, OnDestroy} from '@angular/core'\nimport {Store, select} from '@ngrx/store'\nimport {getArticleAction} from 'src/app/article/store/actions/getArticle.action'\nimport {ActivatedRoute} from '@angular/router'\nimport {ArticleInterface} from 'src/app/shared/types/article.interface'\nimport {Subscription, pipe, Observable, combineLatest} from 'rxjs'\nimport {\n  articleSelector,\n  isLoadingSelector,\n  errorSelector\n} from 'src/app/article/store/selectors'\nimport {currentUserSelector} from 'src/app/auth/store/selectors'\nimport {map} from 'rxjs/operators'\nimport {CurrentUserInterface} from 'src/app/shared/types/currentUser.interface'\nimport {deleteArticleAction} from '../../store/actions/deleteArticle.action'\n\n@Component({\n  selector: 'mc-article',\n  templateUrl: './article.component.html',\n  styleUrls: ['./article.component.scss']\n})\nexport class ArticleComponent implements OnInit, OnDestroy {\n  slug: string\n  article: ArticleInterface\n  articleSubscription: Subscription\n  isLoading$: Observable<boolean>\n  error$: Observable<string | null>\n  isAuthor$: Observable<boolean>\n\n  constructor(private store: Store, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.initializeValues()\n    this.initializeListeners()\n    this.fetchData()\n  }\n\n  ngOnDestroy(): void {\n    this.articleSubscription.unsubscribe()\n  }\n\n  initializeValues(): void {\n    this.slug = this.route.snapshot.paramMap.get('slug')\n    this.isLoading$ = this.store.pipe(select(isLoadingSelector))\n    this.error$ = this.store.pipe(select(errorSelector))\n    this.isAuthor$ = combineLatest(\n      this.store.pipe(select(articleSelector)),\n      this.store.pipe(select(currentUserSelector))\n    ).pipe(\n      map(\n        ([article, currentUser]: [\n          ArticleInterface | null,\n          CurrentUserInterface | null\n        ]) => {\n          if (!article || !currentUser) {\n            return false\n          }\n          return currentUser.username === article.author.username\n        }\n      )\n    )\n  }\n\n  initializeListeners(): void {\n    this.articleSubscription = this.store\n      .pipe(select(articleSelector))\n      .subscribe((article: ArticleInterface | null) => {\n        this.article = article\n      })\n  }\n\n  fetchData(): void {\n    this.store.dispatch(getArticleAction({slug: this.slug}))\n  }\n\n  deleteArticle(): void {\n    this.store.dispatch(deleteArticleAction({slug: this.slug}))\n  }\n}\n","<div class=\"article-page\">\n  <div class=\"banner\">\n    <div class=\"container\" *ngIf=\"article\">\n      <h1>{{ article.title }}</h1>\n      <div class=\"article-meta\">\n        <a [routerLink]=\"['/profiles', article.author.username]\">\n          <img [src]=\"article.author.image\" />\n        </a>\n        <div class=\"info\">\n          <a [routerLink]=\"['/profiles', article.author.username]\">\n            {{ article.author.username }}\n          </a>\n          <span class=\"date\">\n            {{ article.createdAt }}\n          </span>\n        </div>\n        <span *ngIf=\"isAuthor$ | async\">\n          <a\n            [routerLink]=\"['/articles', article.slug, 'edit']\"\n            class=\"btn btn-outline-secondary btn-sm\"\n          >\n            <i class=\"ion-edit\"></i>\n            Изменить статью\n          </a>\n          <button\n            class=\"btn btn-outline-danger btn-sm\"\n            (click)=\"deleteArticle()\"\n          >\n            Удалить статью\n          </button>\n        </span>\n      </div>\n    </div>\n  </div>\n  <div class=\"container page\">\n    <mc-loading *ngIf=\"isLoading$ | async\"></mc-loading>\n    <mc-error-message *ngIf=\"error$ | async\"></mc-error-message>\n\n    <div class=\"row article-content\" *ngIf=\"article\">\n      <div class=\"col-xs-12\">\n        <div>\n          <p>{{ article.body }}</p>\n        </div>\n        <mc-tag-list [tags]=\"article.tagList\"></mc-tag-list>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Injectable} from '@angular/core'\nimport {HttpClient} from '@angular/common/http'\nimport {Observable} from 'rxjs'\nimport {environment} from 'src/environments/environment'\n\n@Injectable()\nexport class ArticleService {\n  constructor(private http: HttpClient) {}\n\n  deleteArticle(slug: string): Observable<{}> {\n    const url = `${environment.apiUrl}/articles/${slug}`\n\n    return this.http.delete<{}>(url)\n  }\n}\n","export enum ActionTypes {\n  GET_ARTICLE = '[Article] Get article',\n  GET_ARTICLE_SUCCESS = '[Article] Get article success',\n  GET_ARTICLE_FAILURE = '[Article] Get article failure',\n\n  DELETE_ARTICLE = '[Article] Delete article',\n  DELETE_ARTICLE_SUCCESS = '[Article] Delete article success',\n  DELETE_ARTICLE_FAILURE = '[Article] Delete article failure'\n}\n","import {createAction, props} from '@ngrx/store'\n\nimport {ActionTypes} from '../actionTypes'\n\nexport const deleteArticleAction = createAction(\n  ActionTypes.DELETE_ARTICLE,\n  props<{slug: string}>()\n)\n\nexport const deleteArticleSuccessAction = createAction(\n  ActionTypes.DELETE_ARTICLE_SUCCESS\n)\n\nexport const deleteArticleFailureAction = createAction(\n  ActionTypes.DELETE_ARTICLE_FAILURE\n)\n","import {createAction, props} from '@ngrx/store'\nimport {ActionTypes} from '../actionTypes'\nimport {ArticleInterface} from 'src/app/shared/types/article.interface'\n\nexport const getArticleAction = createAction(\n  ActionTypes.GET_ARTICLE,\n  props<{slug: string}>()\n)\n\nexport const getArticleSuccessAction = createAction(\n  ActionTypes.GET_ARTICLE_SUCCESS,\n  props<{article: ArticleInterface}>()\n)\n\nexport const getArticleFailureAction = createAction(\n  ActionTypes.GET_ARTICLE_FAILURE\n)\n","import {Injectable} from '@angular/core'\nimport {createEffect, Actions, ofType} from '@ngrx/effects'\nimport {map, catchError, switchMap, tap} from 'rxjs/operators'\nimport {of} from 'rxjs'\n\nimport {ArticleService} from 'src/app/article/services/article.service'\nimport {\n  deleteArticleAction,\n  deleteArticleSuccessAction,\n  deleteArticleFailureAction\n} from 'src/app/article/store/actions/deleteArticle.action'\nimport {Router} from '@angular/router'\n\n@Injectable()\nexport class DeleteArticleEffect {\n  deleteArticle$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(deleteArticleAction),\n      switchMap(({slug}) => {\n        return this.articleService.deleteArticle(slug).pipe(\n          map(() => {\n            return deleteArticleSuccessAction()\n          }),\n\n          catchError(() => {\n            return of(deleteArticleFailureAction())\n          })\n        )\n      })\n    )\n  )\n\n  redirectAfterDelete$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(deleteArticleSuccessAction),\n        tap(() => {\n          this.router.navigate(['/'])\n        })\n      ),\n    {dispatch: false}\n  )\n\n  constructor(\n    private actions$: Actions,\n    private articleService: ArticleService,\n    private router: Router\n  ) {}\n}\n","import {Injectable} from '@angular/core'\nimport {createEffect, Actions, ofType} from '@ngrx/effects'\nimport {map, catchError, switchMap} from 'rxjs/operators'\nimport {of} from 'rxjs'\n\nimport {ArticleService as SharedArticleService} from 'src/app/shared/services/article.service'\nimport {\n  getArticleAction,\n  getArticleSuccessAction,\n  getArticleFailureAction\n} from '../actions/getArticle.action'\nimport {ArticleInterface} from 'src/app/shared/types/article.interface'\n\n@Injectable()\nexport class GetArticleEffect {\n  getArticle$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(getArticleAction),\n      switchMap(({slug}) => {\n        return this.sharedArticleService.getArticle(slug).pipe(\n          map((article: ArticleInterface) => {\n            return getArticleSuccessAction({article})\n          }),\n\n          catchError(() => {\n            return of(getArticleFailureAction())\n          })\n        )\n      })\n    )\n  )\n\n  constructor(\n    private actions$: Actions,\n    private sharedArticleService: SharedArticleService\n  ) {}\n}\n","import {createReducer, on, Action} from '@ngrx/store'\nimport {routerNavigationAction} from '@ngrx/router-store'\n\nimport {ArticleStateInterface} from 'src/app/article/types/articleState.interface'\nimport {\n  getArticleAction,\n  getArticleSuccessAction,\n  getArticleFailureAction\n} from 'src/app/article/store/actions/getArticle.action'\n\nconst initialState: ArticleStateInterface = {\n  data: null,\n  isLoading: false,\n  error: null\n}\n\nconst articleReducer = createReducer(\n  initialState,\n  on(\n    getArticleAction,\n    (state): ArticleStateInterface => ({\n      ...state,\n      isLoading: true\n    })\n  ),\n  on(\n    getArticleSuccessAction,\n    (state, action): ArticleStateInterface => ({\n      ...state,\n      isLoading: false,\n      data: action.article\n    })\n  ),\n  on(\n    getArticleFailureAction,\n    (state): ArticleStateInterface => ({\n      ...state,\n      isLoading: false\n    })\n  ),\n  on(routerNavigationAction, (): ArticleStateInterface => initialState)\n)\n\nexport function reducers(state: ArticleStateInterface, action: Action) {\n  return articleReducer(state, action)\n}\n","import {createFeatureSelector, createSelector} from '@ngrx/store'\n\nimport {AppStateInterface} from 'src/app/shared/types/appState.interface'\nimport {ArticleStateInterface} from '../types/articleState.interface'\n\nexport const articleFeatureSelector = createFeatureSelector<\n  AppStateInterface,\n  ArticleStateInterface\n>('article')\n\nexport const isLoadingSelector = createSelector(\n  articleFeatureSelector,\n  (articleState: ArticleStateInterface) => articleState.isLoading\n)\n\nexport const errorSelector = createSelector(\n  articleFeatureSelector,\n  (articleState: ArticleStateInterface) => articleState.error\n)\n\nexport const articleSelector = createSelector(\n  articleFeatureSelector,\n  (articleState: ArticleStateInterface) => articleState.data\n)\n","import {NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\nimport {StoreModule} from '@ngrx/store'\nimport {EffectsModule} from '@ngrx/effects'\n\nimport {RegisterComponent} from 'src/app/auth/components/register/register.component'\nimport {RouterModule} from '@angular/router'\nimport {ReactiveFormsModule} from '@angular/forms'\nimport {reducers} from 'src/app/auth/store/reducers'\nimport {AuthService} from 'src/app/auth/services/auth.service'\nimport {RegisterEffect} from 'src/app/auth/store/effects/register.effect'\nimport {BackendErrorMessagesModule} from 'src/app/shared/modules/backendErrorMessages/backendErrorMessages.module'\nimport {PersistanceService} from 'src/app/shared/services/persistance.service'\nimport {LoginEffect} from 'src/app/auth/store/effects/login.effect'\nimport {LoginComponent} from 'src/app/auth/components/login/login.component'\nimport {GetCurrentUserEffect} from 'src/app/auth/store/effects/getCurrentUser.effect'\nimport {UpdateCurrentUserEffect} from './store/effects/updateCurrentUser.effect'\nimport {LogoutEffect} from './store/effects/logout.effect'\n\nconst routes = [\n  {\n    path: 'register',\n    component: RegisterComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  }\n]\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    StoreModule.forFeature('auth', reducers),\n    EffectsModule.forFeature([\n      RegisterEffect,\n      LoginEffect,\n      GetCurrentUserEffect,\n      UpdateCurrentUserEffect,\n      LogoutEffect\n    ]),\n    BackendErrorMessagesModule\n  ],\n  declarations: [RegisterComponent, LoginComponent],\n  providers: [AuthService, PersistanceService]\n})\nexport class AuthModule {}\n","import {Component, OnInit} from '@angular/core'\nimport {FormGroup, FormBuilder, Validators} from '@angular/forms'\nimport {Store, select} from '@ngrx/store'\nimport {Observable} from 'rxjs'\n\nimport {\n  isSubmittingSelector,\n  validationErrorsSelector\n} from 'src/app/auth/store/selectors'\nimport {BackendErrorsInterface} from 'src/app/shared/types/backendErrors.interface'\nimport {LoginRequestInterface} from 'src/app/auth/types/loginRequest.interface'\nimport {loginAction} from 'src/app/auth/store/actions/login.action'\n\n@Component({\n  selector: 'mc-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  form: FormGroup\n  isSubmitting$: Observable<boolean>\n  backendErrors$: Observable<BackendErrorsInterface | null>\n\n  constructor(private fb: FormBuilder, private store: Store) {}\n\n  ngOnInit(): void {\n    this.initializeForm()\n    this.initializeValues()\n  }\n\n  initializeValues(): void {\n    this.isSubmitting$ = this.store.pipe(select(isSubmittingSelector))\n    this.backendErrors$ = this.store.pipe(select(validationErrorsSelector))\n  }\n\n  initializeForm(): void {\n    this.form = this.fb.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    })\n  }\n\n  onSubmit(): void {\n    const request: LoginRequestInterface = {\n      user: this.form.value\n    }\n    this.store.dispatch(loginAction({request}))\n  }\n}\n","<div class=\"auth-page\">\n  <div class=\"container page\">\n    <div class=\"row\">\n      <div class=\"col-md-6 offset-md-3 col-xs-12\">\n        <h1 class=\"text-xs-center\">Войти</h1>\n        <p class=\"text-xs-center\">\n          <a [routerLink]=\"['/register']\">Нужен аккаунт?</a>\n        </p>\n        <mc-backend-error-messages\n          *ngIf=\"backendErrors$ | async\"\n          [backendErrors]=\"backendErrors$ | async\"\n        ></mc-backend-error-messages>\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n          <fieldset>\n            <fieldset class=\"form-group\">\n              <input\n                type=\"text\"\n                class=\"form-control form-control-lg\"\n                placeholder=\"Email\"\n                formControlName=\"email\"\n              />\n            </fieldset>\n            <fieldset class=\"form-group\">\n              <input\n                type=\"password\"\n                class=\"form-control form-control-lg\"\n                placeholder=\"Password\"\n                formControlName=\"password\"\n              />\n            </fieldset>\n            <button\n              class=\"btn btn-lg btn-primary pull-xs-right\"\n              type=\"submit\"\n              [disabled]=\"isSubmitting$ | async\"\n            >\n              Войти\n            </button>\n          </fieldset>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core'\nimport {FormGroup, FormBuilder, Validators} from '@angular/forms'\nimport {Store, select} from '@ngrx/store'\nimport {Observable} from 'rxjs'\n\nimport {registerAction} from 'src/app/auth/store/actions/register.action'\nimport {\n  isSubmittingSelector,\n  validationErrorsSelector\n} from 'src/app/auth/store/selectors'\nimport {RegisterRequestInterface} from 'src/app/auth/types/registerRequest.interface'\nimport {BackendErrorsInterface} from 'src/app/shared/types/backendErrors.interface'\n\n@Component({\n  selector: 'mc-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  form: FormGroup\n  isSubmitting$: Observable<boolean>\n  backendErrors$: Observable<BackendErrorsInterface | null>\n\n  constructor(private fb: FormBuilder, private store: Store) {}\n\n  ngOnInit(): void {\n    this.initializeForm()\n    this.initializeValues()\n  }\n\n  initializeValues(): void {\n    this.isSubmitting$ = this.store.pipe(select(isSubmittingSelector))\n    this.backendErrors$ = this.store.pipe(select(validationErrorsSelector))\n  }\n\n  initializeForm(): void {\n    console.log('initializeForm')\n    this.form = this.fb.group({\n      username: ['', Validators.required],\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    })\n  }\n\n  onSubmit(): void {\n    console.log('submit', this.form.value, this.form.valid)\n    const request: RegisterRequestInterface = {\n      user: this.form.value\n    }\n    this.store.dispatch(registerAction({request}))\n  }\n}\n","<div class=\"auth-page\">\n  <div class=\"container page\">\n    <div class=\"row\">\n      <div class=\"col-md-6 offset-md-3 col-xs-12\">\n        <h1 class=\"text-xs-center\">Зарегистрироваться</h1>\n        <p class=\"text-xs-center\">\n          <a [routerLink]=\"['/login']\">Есть аккаунт?</a>\n        </p>\n        <mc-backend-error-messages\n          *ngIf=\"backendErrors$ | async\"\n          [backendErrors]=\"backendErrors$ | async\"\n        ></mc-backend-error-messages>\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n          <fieldset>\n            <fieldset class=\"form-group\">\n              <input\n                type=\"text\"\n                class=\"form-control form-control-lg\"\n                placeholder=\"Username\"\n                formControlName=\"username\"\n              />\n            </fieldset>\n            <fieldset class=\"form-group\">\n              <input\n                type=\"text\"\n                class=\"form-control form-control-lg\"\n                placeholder=\"Email\"\n                formControlName=\"email\"\n              />\n            </fieldset>\n            <fieldset class=\"form-group\">\n              <input\n                type=\"password\"\n                class=\"form-control form-control-lg\"\n                placeholder=\"Password\"\n                formControlName=\"password\"\n              />\n            </fieldset>\n            <button\n              class=\"btn btn-lg btn-primary pull-xs-right\"\n              type=\"submit\"\n              [disabled]=\"isSubmitting$ | async\"\n            >\n              Зарегистрироваться\n            </button>\n          </fieldset>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Injectable} from '@angular/core'\nimport {HttpClient} from '@angular/common/http'\nimport {Observable} from 'rxjs'\nimport {map} from 'rxjs/operators'\n\nimport {RegisterRequestInterface} from 'src/app/auth/types/registerRequest.interface'\nimport {CurrentUserInterface} from 'src/app/shared/types/currentUser.interface'\nimport {environment} from 'src/environments/environment'\nimport {AuthResponseInterface} from 'src/app/auth/types/authResponse.interface'\nimport {LoginRequestInterface} from 'src/app/auth/types/loginRequest.interface'\nimport {CurrentUserInputInterface} from 'src/app/shared/types/currentUserInput.interface'\n\n@Injectable()\nexport class AuthService {\n  constructor(private http: HttpClient) {}\n\n  getUser(response: AuthResponseInterface): CurrentUserInterface {\n    return response.user\n  }\n\n  register(data: RegisterRequestInterface): Observable<CurrentUserInterface> {\n    const url = environment.apiUrl + '/users'\n    return this.http\n      .post<AuthResponseInterface>(url, data)\n      .pipe(map(this.getUser))\n  }\n\n  login(data: LoginRequestInterface): Observable<CurrentUserInterface> {\n    const url = environment.apiUrl + '/users/login'\n    return this.http\n      .post<AuthResponseInterface>(url, data)\n      .pipe(map(this.getUser))\n  }\n\n  getCurrentUser(): Observable<CurrentUserInterface> {\n    const url = environment.apiUrl + '/user'\n    return this.http.get(url).pipe(map(this.getUser))\n  }\n\n  updateCurrentUser(\n    data: CurrentUserInputInterface\n  ): Observable<CurrentUserInterface> {\n    const url = environment.apiUrl + '/user'\n    return this.http.put(url, data).pipe(map(this.getUser))\n  }\n}\n","export enum ActionTypes {\n  REGISTER = '[Auth] Register',\n  REGISTER_SUCCESS = '[Auth] Register success',\n  REGISTER_FAILURE = '[Auth] Register failure',\n\n  LOGIN = '[Auth] Login',\n  LOGIN_SUCCESS = '[Auth] Login success',\n  LOGIN_FAILURE = '[Auth] Login failure',\n\n  GET_CURRENT_USER = '[Auth] Get current user',\n  GET_CURRENT_USER_SUCCESS = '[Auth] Get current user success',\n  GET_CURRENT_USER_FAILURE = '[Auth] Get current user failure',\n\n  UPDATE_CURRENT_USER = '[Auth] Update current user',\n  UPDATE_CURRENT_USER_SUCCESS = '[Auth] Update current user success',\n  UPDATE_CURRENT_USER_FAILURE = '[Auth] Update current user failure',\n\n  LOGOUT = '[Auth] Logout'\n}\n","import {createAction, props} from '@ngrx/store'\n\nimport {ActionTypes} from 'src/app/auth/store/actionTypes'\nimport {CurrentUserInterface} from 'src/app/shared/types/currentUser.interface'\n\nexport const getCurrentUserAction = createAction(ActionTypes.GET_CURRENT_USER)\n\nexport const getCurrentUserSuccessAction = createAction(\n  ActionTypes.GET_CURRENT_USER_SUCCESS,\n  props<{currentUser: CurrentUserInterface}>()\n)\n\nexport const getCurrentUserFailureAction = createAction(\n  ActionTypes.GET_CURRENT_USER_FAILURE\n)\n","import {createAction, props} from '@ngrx/store'\n\nimport {ActionTypes} from 'src/app/auth/store/actionTypes'\nimport {LoginRequestInterface} from 'src/app/auth/types/loginRequest.interface'\nimport {CurrentUserInterface} from 'src/app/shared/types/currentUser.interface'\nimport {BackendErrorsInterface} from 'src/app/shared/types/backendErrors.interface'\n\nexport const loginAction = createAction(\n  ActionTypes.LOGIN,\n  props<{request: LoginRequestInterface}>()\n)\n\nexport const loginSuccessAction = createAction(\n  ActionTypes.LOGIN_SUCCESS,\n  props<{currentUser: CurrentUserInterface}>()\n)\n\nexport const loginFailureAction = createAction(\n  ActionTypes.LOGIN_FAILURE,\n  props<{errors: BackendErrorsInterface}>()\n)\n","import {createAction, props} from '@ngrx/store'\n\nimport {ActionTypes} from 'src/app/auth/store/actionTypes'\nimport {RegisterRequestInterface} from 'src/app/auth/types/registerRequest.interface'\nimport {CurrentUserInterface} from 'src/app/shared/types/currentUser.interface'\nimport {BackendErrorsInterface} from 'src/app/shared/types/backendErrors.interface'\n\nexport const registerAction = createAction(\n  ActionTypes.REGISTER,\n  props<{request: RegisterRequestInterface}>()\n)\n\nexport const registerSuccessAction = createAction(\n  ActionTypes.REGISTER_SUCCESS,\n  props<{currentUser: CurrentUserInterface}>()\n)\n\nexport const registerFailureAction = createAction(\n  ActionTypes.REGISTER_FAILURE,\n  props<{errors: BackendErrorsInterface}>()\n)\n","import {createAction} from '@ngrx/store'\nimport {ActionTypes} from '../actionTypes'\n\nexport const logoutAction = createAction(ActionTypes.LOGOUT)\n","import {createAction, props} from '@ngrx/store'\n\nimport {ActionTypes} from 'src/app/auth/store/actionTypes'\nimport {CurrentUserInterface} from 'src/app/shared/types/currentUser.interface'\nimport {BackendErrorsInterface} from 'src/app/shared/types/backendErrors.interface'\nimport {CurrentUserInputInterface} from 'src/app/shared/types/currentUserInput.interface'\n\nexport const updateCurrentUserAction = createAction(\n  ActionTypes.UPDATE_CURRENT_USER,\n  props<{currentUserInput: CurrentUserInputInterface}>()\n)\n\nexport const updateCurrentUserSuccessAction = createAction(\n  ActionTypes.UPDATE_CURRENT_USER_SUCCESS,\n  props<{currentUser: CurrentUserInterface}>()\n)\n\nexport const updateCurrentUserFailureAction = createAction(\n  ActionTypes.UPDATE_CURRENT_USER_FAILURE,\n  props<{errors: BackendErrorsInterface}>()\n)\n\n","import {Injectable} from '@angular/core'\nimport {createEffect, Actions, ofType} from '@ngrx/effects'\nimport {map, catchError, switchMap} from 'rxjs/operators'\nimport {of} from 'rxjs'\n\nimport {AuthService} from 'src/app/auth/services/auth.service'\nimport {CurrentUserInterface} from 'src/app/shared/types/currentUser.interface'\nimport {PersistanceService} from 'src/app/shared/services/persistance.service'\nimport {\n  getCurrentUserAction,\n  getCurrentUserSuccessAction,\n  getCurrentUserFailureAction\n} from 'src/app/auth/store/actions/getCurrentUser.action'\n\n@Injectable()\nexport class GetCurrentUserEffect {\n  getCurrentUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(getCurrentUserAction),\n      switchMap(() => {\n        const token = this.persistanceService.get('accessToken')\n\n        if (!token) {\n          return of(getCurrentUserFailureAction())\n        }\n\n        return this.authService.getCurrentUser().pipe(\n          map((currentUser: CurrentUserInterface) => {\n            return getCurrentUserSuccessAction({currentUser})\n          }),\n\n          catchError(() => {\n            return of(getCurrentUserFailureAction())\n          })\n        )\n      })\n    )\n  )\n\n  constructor(\n    private actions$: Actions,\n    private authService: AuthService,\n    private persistanceService: PersistanceService\n  ) {}\n}\n","import {Injectable} from '@angular/core'\nimport {createEffect, Actions, ofType} from '@ngrx/effects'\nimport {map, catchError, switchMap, tap} from 'rxjs/operators'\nimport {HttpErrorResponse} from '@angular/common/http'\nimport {Router} from '@angular/router'\nimport {of} from 'rxjs'\n\nimport {AuthService} from 'src/app/auth/services/auth.service'\nimport {CurrentUserInterface} from 'src/app/shared/types/currentUser.interface'\nimport {PersistanceService} from 'src/app/shared/services/persistance.service'\nimport {\n  loginAction,\n  loginSuccessAction,\n  loginFailureAction\n} from 'src/app/auth/store/actions/login.action'\n\n@Injectable()\nexport class LoginEffect {\n  login$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loginAction),\n      switchMap(({request}) => {\n        return this.authService.login(request).pipe(\n          map((currentUser: CurrentUserInterface) => {\n            this.persistanceService.set('accessToken', currentUser.token)\n            return loginSuccessAction({currentUser})\n          }),\n\n          catchError((errorResponse: HttpErrorResponse) => {\n            return of(loginFailureAction({errors: errorResponse.error.errors}))\n          })\n        )\n      })\n    )\n  )\n\n  redirectAfterSubmit$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(loginSuccessAction),\n        tap(() => {\n          this.router.navigateByUrl('/')\n        })\n      ),\n    {dispatch: false}\n  )\n\n  constructor(\n    private actions$: Actions,\n    private authService: AuthService,\n    private persistanceService: PersistanceService,\n    private router: Router\n  ) {}\n}\n","import {Injectable} from '@angular/core'\nimport {Actions, createEffect, ofType} from '@ngrx/effects'\nimport {logoutAction} from 'src/app/auth/store/actions/sync.action'\nimport {tap} from 'rxjs/operators'\nimport {PersistanceService} from 'src/app/shared/services/persistance.service'\nimport {Router} from '@angular/router'\n\n@Injectable()\nexport class LogoutEffect {\n  logout$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(logoutAction),\n        tap(() => {\n          this.persistanceService.set('accessToken', '')\n          this.router.navigateByUrl('/')\n        })\n      ),\n    {dispatch: false}\n  )\n  constructor(\n    private actions$: Actions,\n    private persistanceService: PersistanceService,\n    private router: Router\n  ) {}\n}\n","import {Injectable} from '@angular/core'\nimport {createEffect, Actions, ofType} from '@ngrx/effects'\nimport {map, catchError, switchMap, tap} from 'rxjs/operators'\nimport {HttpErrorResponse} from '@angular/common/http'\n\nimport {\n  registerAction,\n  registerSuccessAction,\n  registerFailureAction\n} from '../actions/register.action'\nimport {AuthService} from '../../services/auth.service'\nimport {CurrentUserInterface} from 'src/app/shared/types/currentUser.interface'\nimport {of} from 'rxjs'\nimport {PersistanceService} from 'src/app/shared/services/persistance.service'\nimport {Router} from '@angular/router'\n\n@Injectable()\nexport class RegisterEffect {\n  register$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerAction),\n      switchMap(({request}) => {\n        return this.authService.register(request).pipe(\n          map((currentUser: CurrentUserInterface) => {\n            this.persistanceService.set('accessToken', currentUser.token)\n            return registerSuccessAction({currentUser})\n          }),\n\n          catchError((errorResponse: HttpErrorResponse) => {\n            return of(\n              registerFailureAction({errors: errorResponse.error.errors})\n            )\n          })\n        )\n      })\n    )\n  )\n\n  redirectAfterSubmit$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(registerSuccessAction),\n        tap(() => {\n          this.router.navigateByUrl('/')\n        })\n      ),\n    {dispatch: false}\n  )\n\n  constructor(\n    private actions$: Actions,\n    private authService: AuthService,\n    private persistanceService: PersistanceService,\n    private router: Router\n  ) {}\n}\n","import {Injectable} from '@angular/core'\nimport {createEffect, Actions, ofType} from '@ngrx/effects'\nimport {map, catchError, switchMap} from 'rxjs/operators'\nimport {HttpErrorResponse} from '@angular/common/http'\nimport {of} from 'rxjs'\n\nimport {AuthService} from 'src/app/auth/services/auth.service'\nimport {CurrentUserInterface} from 'src/app/shared/types/currentUser.interface'\nimport {\n  updateCurrentUserFailureAction,\n  updateCurrentUserSuccessAction,\n  updateCurrentUserAction\n} from 'src/app/auth/store/actions/updateCurrentUser.action'\n\n@Injectable()\nexport class UpdateCurrentUserEffect {\n  updateCurrentUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(updateCurrentUserAction),\n      switchMap(({currentUserInput}) => {\n        return this.authService.updateCurrentUser(currentUserInput).pipe(\n          map((currentUser: CurrentUserInterface) => {\n            return updateCurrentUserSuccessAction({currentUser})\n          }),\n\n          catchError((errorResponse: HttpErrorResponse) => {\n            return of(\n              updateCurrentUserFailureAction({\n                errors: errorResponse.error.errors\n              })\n            )\n          })\n        )\n      })\n    )\n  )\n\n  constructor(private actions$: Actions, private authService: AuthService) {}\n}\n","import {createReducer, on, Action} from '@ngrx/store'\n\nimport {AuthStateInterface} from 'src/app/auth/types/authState.interface'\nimport {\n  registerAction,\n  registerSuccessAction,\n  registerFailureAction\n} from 'src/app/auth/store/actions/register.action'\nimport {\n  loginAction,\n  loginSuccessAction,\n  loginFailureAction\n} from 'src/app/auth/store/actions/login.action'\nimport {\n  getCurrentUserAction,\n  getCurrentUserSuccessAction,\n  getCurrentUserFailureAction\n} from 'src/app/auth/store/actions/getCurrentUser.action'\nimport {updateCurrentUserSuccessAction} from './actions/updateCurrentUser.action'\nimport {logoutAction} from './actions/sync.action'\n\nconst initialState: AuthStateInterface = {\n  isSubmitting: false,\n  isLoading: false,\n  currentUser: null,\n  validationErrors: null,\n  isLoggedIn: null\n}\n\nconst authReducer = createReducer(\n  initialState,\n  on(\n    registerAction,\n    (state): AuthStateInterface => ({\n      ...state,\n      isSubmitting: true,\n      validationErrors: null\n    })\n  ),\n  on(\n    registerSuccessAction,\n    (state, action): AuthStateInterface => ({\n      ...state,\n      isSubmitting: false,\n      isLoggedIn: true,\n      currentUser: action.currentUser\n    })\n  ),\n  on(\n    registerFailureAction,\n    (state, action): AuthStateInterface => ({\n      ...state,\n      isSubmitting: false,\n      validationErrors: action.errors\n    })\n  ),\n  on(\n    loginAction,\n    (state): AuthStateInterface => ({\n      ...state,\n      isSubmitting: true,\n      validationErrors: null\n    })\n  ),\n  on(\n    loginSuccessAction,\n    (state, action): AuthStateInterface => ({\n      ...state,\n      isSubmitting: false,\n      isLoggedIn: true,\n      currentUser: action.currentUser\n    })\n  ),\n  on(\n    loginFailureAction,\n    (state, action): AuthStateInterface => ({\n      ...state,\n      isSubmitting: false,\n      validationErrors: action.errors\n    })\n  ),\n  on(\n    getCurrentUserAction,\n    (state): AuthStateInterface => ({\n      ...state,\n      isLoading: true\n    })\n  ),\n  on(\n    getCurrentUserSuccessAction,\n    (state, action): AuthStateInterface => ({\n      ...state,\n      isLoading: false,\n      isLoggedIn: true,\n      currentUser: action.currentUser\n    })\n  ),\n  on(\n    getCurrentUserFailureAction,\n    (state): AuthStateInterface => ({\n      ...state,\n      isLoading: false,\n      isLoggedIn: false,\n      currentUser: null\n    })\n  ),\n  on(\n    updateCurrentUserSuccessAction,\n    (state, action): AuthStateInterface => ({\n      ...state,\n      currentUser: action.currentUser\n    })\n  ),\n  on(\n    logoutAction,\n    (state): AuthStateInterface => ({\n      ...state,\n      ...initialState,\n      isLoggedIn: false\n    })\n  )\n)\n\nexport function reducers(state: AuthStateInterface, action: Action) {\n  return authReducer(state, action)\n}\n","import {createFeatureSelector, createSelector} from '@ngrx/store'\nimport {AppStateInterface} from 'src/app/shared/types/appState.interface'\nimport {AuthStateInterface} from 'src/app/auth/types/authState.interface'\n\nexport const authFeatureSelector = createFeatureSelector<\n  AppStateInterface,\n  AuthStateInterface\n>('auth')\n\nexport const isSubmittingSelector = createSelector(\n  authFeatureSelector,\n  (authState: AuthStateInterface) => authState.isSubmitting\n)\n\nexport const validationErrorsSelector = createSelector(\n  authFeatureSelector,\n  (authState: AuthStateInterface) => authState.validationErrors\n)\n\nexport const isLoggedInSelector = createSelector(\n  authFeatureSelector,\n  (authState: AuthStateInterface) => authState.isLoggedIn\n)\n\nexport const isAnonymousSelector = createSelector(\n  authFeatureSelector,\n  (authState: AuthStateInterface) => authState.isLoggedIn === false\n)\n\nexport const currentUserSelector = createSelector(\n  authFeatureSelector,\n  (authState: AuthStateInterface) => authState.currentUser\n)\n","import {Component, OnInit} from '@angular/core'\nimport {ArticleInputInterface} from 'src/app/shared/types/articleInput.interface'\nimport {Observable} from 'rxjs'\nimport {BackendErrorsInterface} from 'src/app/shared/types/backendErrors.interface'\nimport {Store, select} from '@ngrx/store'\nimport {\n  isSubmittingSelector,\n  validationErrorsSelector\n} from '../../store/selectors'\nimport {createArticleAction} from '../../store/actions/createArticle.action'\n\n@Component({\n  selector: 'mc-create-article',\n  templateUrl: './createArticle.component.html',\n  styleUrls: ['./createArticle.component.scss']\n})\nexport class CreateArticleComponent implements OnInit {\n  initialValues: ArticleInputInterface = {\n    title: '',\n    description: '',\n    body: '',\n    tagList: []\n  }\n  isSubmitting$: Observable<boolean>\n  backendErrors$: Observable<BackendErrorsInterface | null>\n\n  constructor(private store: Store) {}\n\n  ngOnInit(): void {\n    this.isSubmitting$ = this.store.pipe(select(isSubmittingSelector))\n    this.backendErrors$ = this.store.pipe(select(validationErrorsSelector))\n  }\n\n  onSubmit(articleInput: ArticleInputInterface): void {\n    this.store.dispatch(createArticleAction({articleInput}))\n  }\n}\n","<mc-article-form\n  [initialValues]=\"initialValues\"\n  [isSubmitting]=\"isSubmitting$ | async\"\n  [errors]=\"backendErrors$ | async\"\n  (articleSubmit)=\"onSubmit($event)\"\n></mc-article-form>\n","import {NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\nimport {CreateArticleComponent} from 'src/app/createArticle/components/createArticle/createArticle.component'\nimport {RouterModule} from '@angular/router'\nimport {ArticleFormModule} from 'src/app/shared/modules/articleForm/articleForm.module'\nimport {CreateArticleService} from 'src/app/createArticle/services/createArticle.service'\nimport {EffectsModule} from '@ngrx/effects'\nimport {CreateArticleEffect} from './store/effects/createArticle.effect'\nimport {StoreModule} from '@ngrx/store'\nimport {reducers} from 'src/app/createArticle/store/reducers'\n\nconst routes = [\n  {\n    path: 'articles/new',\n    component: CreateArticleComponent\n  }\n]\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    ArticleFormModule,\n    EffectsModule.forFeature([CreateArticleEffect]),\n    StoreModule.forFeature('createArticle', reducers)\n  ],\n  declarations: [CreateArticleComponent],\n  providers: [CreateArticleService]\n})\nexport class CreateArticleModule {}\n","import {Injectable} from '@angular/core'\nimport {HttpClient} from '@angular/common/http'\nimport {Observable} from 'rxjs'\nimport {map} from 'rxjs/operators'\n\nimport {ArticleInputInterface} from 'src/app/shared/types/articleInput.interface'\nimport {ArticleInterface} from 'src/app/shared/types/article.interface'\nimport {environment} from 'src/environments/environment'\nimport {SaveArticleResponseInterface} from 'src/app/shared/types/saveArticleResponse.interface'\n\n@Injectable()\nexport class CreateArticleService {\n  constructor(private http: HttpClient) {}\n\n  createArticle(\n    articleInput: ArticleInputInterface\n  ): Observable<ArticleInterface> {\n    const fullUrl = environment.apiUrl + '/articles'\n    return this.http\n      .post<SaveArticleResponseInterface>(fullUrl, articleInput)\n      .pipe(\n        map((response: SaveArticleResponseInterface) => {\n          return response.article\n        })\n      )\n  }\n}\n","import {createAction, props} from '@ngrx/store'\nimport {ActionTypes} from '../actionsTypes'\nimport {ArticleInputInterface} from 'src/app/shared/types/articleInput.interface'\nimport {ArticleInterface} from 'src/app/shared/types/article.interface'\nimport {BackendErrorsInterface} from 'src/app/shared/types/backendErrors.interface'\n\nexport const createArticleAction = createAction(\n  ActionTypes.CREATE_ARTICLE,\n  props<{articleInput: ArticleInputInterface}>()\n)\n\nexport const createArticleSuccessAction = createAction(\n  ActionTypes.CREATE_ARTICLE_SUCCESS,\n  props<{article: ArticleInterface}>()\n)\n\nexport const createArticleFailureAction = createAction(\n  ActionTypes.CREATE_ARTICLE_FAILURE,\n  props<{errors: BackendErrorsInterface}>()\n)\n","export enum ActionTypes {\n  CREATE_ARTICLE = '[Create article] Create Article',\n  CREATE_ARTICLE_SUCCESS = '[Create article] Create Article success',\n  CREATE_ARTICLE_FAILURE = '[Create article] Create Article failure'\n}\n","import {Injectable} from '@angular/core'\nimport {createEffect, Actions, ofType} from '@ngrx/effects'\nimport {map, catchError, switchMap, tap} from 'rxjs/operators'\nimport {HttpErrorResponse} from '@angular/common/http'\nimport {Router} from '@angular/router'\nimport {of} from 'rxjs'\n\nimport {CreateArticleService} from '../../services/createArticle.service'\nimport {\n  createArticleSuccessAction,\n  createArticleFailureAction,\n  createArticleAction\n} from 'src/app/createArticle/store/actions/createArticle.action'\nimport {ArticleInterface} from 'src/app/shared/types/article.interface'\n\n@Injectable()\nexport class CreateArticleEffect {\n  createArticle$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(createArticleAction),\n      switchMap(({articleInput}) => {\n        return this.createArticleService.createArticle(articleInput).pipe(\n          map((article: ArticleInterface) => {\n            return createArticleSuccessAction({article})\n          }),\n\n          catchError((errorResponse: HttpErrorResponse) => {\n            return of(\n              createArticleFailureAction({errors: errorResponse.error.errors})\n            )\n          })\n        )\n      })\n    )\n  )\n\n  redirectAfterCreate$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(createArticleSuccessAction),\n        tap(({article}) => {\n          this.router.navigate(['/articles', article.slug])\n        })\n      ),\n    {dispatch: false}\n  )\n\n  constructor(\n    private actions$: Actions,\n    private createArticleService: CreateArticleService,\n    private router: Router\n  ) {}\n}\n","import {CreateArticleStateInterface} from '../types/createArticleState.interface'\nimport {createReducer, on, Action} from '@ngrx/store'\nimport {\n  createArticleAction,\n  createArticleSuccessAction,\n  createArticleFailureAction\n} from './actions/createArticle.action'\n\nconst initialState: CreateArticleStateInterface = {\n  isSubmitting: false,\n  validationErrors: null\n}\n\nconst createArticleReducer = createReducer(\n  initialState,\n  on(\n    createArticleAction,\n    (state): CreateArticleStateInterface => ({\n      ...state,\n      isSubmitting: true\n    })\n  ),\n\n  on(\n    createArticleSuccessAction,\n    (state): CreateArticleStateInterface => ({\n      ...state,\n      isSubmitting: false\n    })\n  ),\n\n  on(\n    createArticleFailureAction,\n    (state, action): CreateArticleStateInterface => ({\n      ...state,\n      isSubmitting: false,\n      validationErrors: action.errors\n    })\n  )\n)\n\nexport function reducers(state: CreateArticleStateInterface, action: Action) {\n  return createArticleReducer(state, action)\n}\n","import {createFeatureSelector, createSelector} from '@ngrx/store'\nimport {CreateArticleStateInterface} from 'src/app/createArticle/types/createArticleState.interface'\nimport {AppStateInterface} from 'src/app/shared/types/appState.interface'\n\nexport const createArticleFeatureSelector = createFeatureSelector<\n  AppStateInterface,\n  CreateArticleStateInterface\n>('createArticle')\n\nexport const isSubmittingSelector = createSelector(\n  createArticleFeatureSelector,\n  (createArticleState: CreateArticleStateInterface) =>\n    createArticleState.isSubmitting\n)\n\nexport const validationErrorsSelector = createSelector(\n  createArticleFeatureSelector,\n  (createArticleState: CreateArticleStateInterface) =>\n    createArticleState.validationErrors\n)\n","import {Component, OnInit} from '@angular/core'\nimport {ArticleInputInterface} from 'src/app/shared/types/articleInput.interface'\nimport {Observable} from 'rxjs'\nimport {BackendErrorsInterface} from 'src/app/shared/types/backendErrors.interface'\nimport {Store, select} from '@ngrx/store'\nimport {\n  isSubmittingSelector,\n  validationErrorsSelector,\n  isLoadingSelector,\n  articleSelector\n} from '../../store/selectors'\nimport {getArticleAction} from '../../store/actions/getArticle.action'\nimport {ActivatedRoute} from '@angular/router'\nimport {filter, map} from 'rxjs/operators'\nimport {ArticleInterface} from 'src/app/shared/types/article.interface'\nimport {updateArticleAction} from 'src/app/editArticle/store/actions/updateArticle.action'\n\n@Component({\n  selector: 'mc-edit-article',\n  templateUrl: './editArticle.component.html',\n  styleUrls: ['./editArticle.component.scss']\n})\nexport class EditArticleComponent implements OnInit {\n  initialValues$: Observable<ArticleInputInterface>\n  isSubmitting$: Observable<boolean>\n  isLoading$: Observable<boolean>\n  backendErrors$: Observable<BackendErrorsInterface | null>\n  slug: string\n\n  constructor(private store: Store, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.initialValues()\n    this.fetchData()\n  }\n\n  initialValues(): void {\n    this.slug = this.route.snapshot.paramMap.get('slug')\n    this.isSubmitting$ = this.store.pipe(select(isSubmittingSelector))\n    this.isLoading$ = this.store.pipe(select(isLoadingSelector))\n    this.backendErrors$ = this.store.pipe(select(validationErrorsSelector))\n    this.initialValues$ = this.store.pipe(\n      select(articleSelector),\n      filter(Boolean),\n      map((article: ArticleInterface) => {\n        return {\n          title: article.title,\n          description: article.description,\n          body: article.body,\n          tagList: article.tagList\n        }\n      })\n    )\n  }\n\n  fetchData(): void {\n    this.store.dispatch(getArticleAction({slug: this.slug}))\n  }\n\n  onSubmit(articleInput: ArticleInputInterface): void {\n    this.store.dispatch(updateArticleAction({slug: this.slug, articleInput}))\n  }\n}\n","<mc-loading *ngIf=\"isLoading$ | async\"></mc-loading>\n<mc-article-form\n  *ngIf=\"initialValues$ | async\"\n  [initialValues]=\"initialValues$ | async\"\n  [isSubmitting]=\"isSubmitting$ | async\"\n  [errors]=\"backendErrors$ | async\"\n  (articleSubmit)=\"onSubmit($event)\"\n></mc-article-form>\n","import {NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\nimport {CreateArticleComponent} from 'src/app/createArticle/components/createArticle/createArticle.component'\nimport {RouterModule} from '@angular/router'\nimport {ArticleFormModule} from 'src/app/shared/modules/articleForm/articleForm.module'\nimport {CreateArticleService} from 'src/app/createArticle/services/createArticle.service'\nimport {EffectsModule} from '@ngrx/effects'\nimport {StoreModule} from '@ngrx/store'\nimport {reducers} from 'src/app/editArticle/store/reducers'\nimport {EditArticleComponent} from './components/editArticle/editArticle.component'\nimport {UpdateArticleEffect} from './store/effects/updateArticle.effect'\nimport {GetArticleEffect} from './store/effects/getArticle.effect'\nimport {EditArticleService} from 'src/app/editArticle/services/editArticle.service'\nimport {ArticleService as SharedArticleService} from 'src/app/shared/services/article.service'\nimport {LoadingModule} from '../shared/modules/loading/loading.module'\n\nconst routes = [\n  {\n    path: 'articles/:slug/edit',\n    component: EditArticleComponent\n  }\n]\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    ArticleFormModule,\n    EffectsModule.forFeature([UpdateArticleEffect, GetArticleEffect]),\n    StoreModule.forFeature('editArticle', reducers),\n    LoadingModule\n  ],\n  declarations: [EditArticleComponent],\n  providers: [EditArticleService, SharedArticleService]\n})\nexport class EditArticleModule {}\n","import {Injectable} from '@angular/core'\nimport {HttpClient} from '@angular/common/http'\nimport {Observable} from 'rxjs'\nimport {map} from 'rxjs/operators'\n\nimport {ArticleInputInterface} from 'src/app/shared/types/articleInput.interface'\nimport {ArticleInterface} from 'src/app/shared/types/article.interface'\nimport {environment} from 'src/environments/environment'\nimport {SaveArticleResponseInterface} from 'src/app/shared/types/saveArticleResponse.interface'\n\n@Injectable()\nexport class EditArticleService {\n  constructor(private http: HttpClient) {}\n\n  updateArticle(\n    slug: string,\n    articleInput: ArticleInputInterface\n  ): Observable<ArticleInterface> {\n    const fullUrl = `${environment.apiUrl}/articles/${slug}`\n    return this.http\n      .put<SaveArticleResponseInterface>(fullUrl, articleInput)\n      .pipe(\n        map((response: SaveArticleResponseInterface) => {\n          return response.article\n        })\n      )\n  }\n}\n","import {createAction, props} from '@ngrx/store'\nimport {ActionTypes} from '../actionsTypes'\nimport {ArticleInterface} from 'src/app/shared/types/article.interface'\n\nexport const getArticleAction = createAction(\n  ActionTypes.GET_ARTICLE,\n  props<{slug: string}>()\n)\n\nexport const getArticleSuccessAction = createAction(\n  ActionTypes.GET_ARTICLE_SUCCESS,\n  props<{article: ArticleInterface}>()\n)\n\nexport const getArticleFailureAction = createAction(\n  ActionTypes.GET_ARTICLE_FAILURE\n)\n","import {createAction, props} from '@ngrx/store'\nimport {ActionTypes} from '../actionsTypes'\nimport {ArticleInputInterface} from 'src/app/shared/types/articleInput.interface'\nimport {ArticleInterface} from 'src/app/shared/types/article.interface'\nimport {BackendErrorsInterface} from 'src/app/shared/types/backendErrors.interface'\n\nexport const updateArticleAction = createAction(\n  ActionTypes.UPDATE_ARTICLE,\n  props<{slug: string; articleInput: ArticleInputInterface}>()\n)\n\nexport const updateArticleSuccessAction = createAction(\n  ActionTypes.UPDATE_ARTICLE_SUCCESS,\n  props<{article: ArticleInterface}>()\n)\n\nexport const updateArticleFailureAction = createAction(\n  ActionTypes.UPDATE_ARTICLE_FAILURE,\n  props<{errors: BackendErrorsInterface}>()\n)\n","export enum ActionTypes {\n  UPDATE_ARTICLE = '[Update article] Update Article',\n  UPDATE_ARTICLE_SUCCESS = '[Update article] Update Article success',\n  UPDATE_ARTICLE_FAILURE = '[Update article] Update Article failure',\n\n  GET_ARTICLE = '[Update article] Get Article',\n  GET_ARTICLE_SUCCESS = '[Update article] Get Article success',\n  GET_ARTICLE_FAILURE = '[Update article] Get Article failure'\n}\n","import {Injectable} from '@angular/core'\nimport {createEffect, Actions, ofType} from '@ngrx/effects'\nimport {map, catchError, switchMap, tap} from 'rxjs/operators'\nimport {HttpErrorResponse} from '@angular/common/http'\nimport {Router} from '@angular/router'\nimport {of} from 'rxjs'\n\nimport {\n  createArticleSuccessAction,\n  createArticleFailureAction,\n  createArticleAction\n} from 'src/app/createArticle/store/actions/createArticle.action'\nimport {ArticleInterface} from 'src/app/shared/types/article.interface'\nimport {ArticleService as SharedArticleService} from 'src/app/shared/services/article.service'\nimport {\n  getArticleAction,\n  getArticleSuccessAction,\n  getArticleFailureAction\n} from '../actions/getArticle.action'\n\n@Injectable()\nexport class GetArticleEffect {\n  getArticle$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(getArticleAction),\n      switchMap(({slug}) => {\n        return this.sharedArticleService.getArticle(slug).pipe(\n          map((article: ArticleInterface) => {\n            return getArticleSuccessAction({article})\n          }),\n\n          catchError(() => {\n            return of(getArticleFailureAction())\n          })\n        )\n      })\n    )\n  )\n\n  constructor(\n    private actions$: Actions,\n    private sharedArticleService: SharedArticleService,\n    private router: Router\n  ) {}\n}\n","import {Injectable} from '@angular/core'\nimport {createEffect, Actions, ofType} from '@ngrx/effects'\nimport {map, catchError, switchMap, tap} from 'rxjs/operators'\nimport {HttpErrorResponse} from '@angular/common/http'\nimport {Router} from '@angular/router'\nimport {of} from 'rxjs'\n\nimport {ArticleInterface} from 'src/app/shared/types/article.interface'\nimport {EditArticleService} from '../../services/editArticle.service'\nimport {\n  updateArticleSuccessAction,\n  updateArticleAction,\n  updateArticleFailureAction\n} from '../actions/updateArticle.action'\n\n@Injectable()\nexport class UpdateArticleEffect {\n  updateArticle$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(updateArticleAction),\n      switchMap(({slug, articleInput}) => {\n        return this.editArticleService.updateArticle(slug, articleInput).pipe(\n          map((article: ArticleInterface) => {\n            return updateArticleSuccessAction({article})\n          }),\n\n          catchError((errorResponse: HttpErrorResponse) => {\n            return of(\n              updateArticleFailureAction({errors: errorResponse.error.errors})\n            )\n          })\n        )\n      })\n    )\n  )\n\n  redirectAfterUpdate$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(updateArticleSuccessAction),\n        tap(({article}) => {\n          this.router.navigate(['/articles', article.slug])\n        })\n      ),\n    {dispatch: false}\n  )\n\n  constructor(\n    private actions$: Actions,\n    private editArticleService: EditArticleService,\n    private router: Router\n  ) {}\n}\n","import {createReducer, on, Action} from '@ngrx/store'\n\nimport {CreateArticleStateInterface} from 'src/app/createArticle/types/createArticleState.interface'\nimport {\n  createArticleAction,\n  createArticleSuccessAction,\n  createArticleFailureAction\n} from 'src/app/createArticle/store/actions/createArticle.action'\nimport {EditArticleStateInterface} from 'src/app/editArticle/types/editArticleState.interface'\nimport {\n  updateArticleAction,\n  updateArticleSuccessAction,\n  updateArticleFailureAction\n} from 'src/app/editArticle/store/actions/updateArticle.action'\nimport {\n  getArticleAction,\n  getArticleSuccessAction,\n  getArticleFailureAction\n} from 'src/app/editArticle/store/actions/getArticle.action'\n\nconst initialState: EditArticleStateInterface = {\n  isLoading: false,\n  article: null,\n  isSubmitting: false,\n  validationErrors: null\n}\n\nconst editArticleReducer = createReducer(\n  initialState,\n  on(\n    updateArticleAction,\n    (state): EditArticleStateInterface => ({\n      ...state,\n      isSubmitting: true\n    })\n  ),\n  on(\n    updateArticleSuccessAction,\n    (state): EditArticleStateInterface => ({\n      ...state,\n      isSubmitting: false\n    })\n  ),\n  on(\n    updateArticleFailureAction,\n    (state, action): EditArticleStateInterface => ({\n      ...state,\n      isSubmitting: false,\n      validationErrors: action.errors\n    })\n  ),\n  on(\n    getArticleAction,\n    (state): EditArticleStateInterface => ({\n      ...state,\n      isLoading: true\n    })\n  ),\n  on(\n    getArticleSuccessAction,\n    (state, action): EditArticleStateInterface => ({\n      ...state,\n      isLoading: false,\n      article: action.article\n    })\n  ),\n  on(\n    getArticleFailureAction,\n    (state): EditArticleStateInterface => ({\n      ...state,\n      isLoading: false\n    })\n  )\n)\n\nexport function reducers(state: EditArticleStateInterface, action: Action) {\n  return editArticleReducer(state, action)\n}\n","import {createFeatureSelector, createSelector} from '@ngrx/store'\nimport {AppStateInterface} from 'src/app/shared/types/appState.interface'\nimport {EditArticleStateInterface} from '../types/editArticleState.interface'\n\nexport const editArticleFeatureSelector = createFeatureSelector<\n  AppStateInterface,\n  EditArticleStateInterface\n>('editArticle')\n\nexport const articleSelector = createSelector(\n  editArticleFeatureSelector,\n  (editArticleState: EditArticleStateInterface) => editArticleState.article\n)\n\nexport const isLoadingSelector = createSelector(\n  editArticleFeatureSelector,\n  (editArticleState: EditArticleStateInterface) => editArticleState.isLoading\n)\n\nexport const isSubmittingSelector = createSelector(\n  editArticleFeatureSelector,\n  (editArticleState: EditArticleStateInterface) => editArticleState.isSubmitting\n)\n\nexport const validationErrorsSelector = createSelector(\n  editArticleFeatureSelector,\n  (editArticleState: EditArticleStateInterface) =>\n    editArticleState.validationErrors\n)\n","import {Component} from '@angular/core'\n\n@Component({\n  selector: 'mc-global-feed',\n  templateUrl: './globalFeed.component.html',\n  styleUrls: ['./globalFeed.component.scss']\n})\nexport class GlobalFeedComponent {\n  apiUrl = '/articles'\n}\n","<div class=\"home-page\">\n  <mc-banner></mc-banner>\n  <div class=\"container page\">\n    <div class=\"row\">\n      <div class=\"col-md-9\">\n        <mc-feed-toggler></mc-feed-toggler>\n        <mc-feed [apiUrl]=\"apiUrl\"></mc-feed>\n      </div>\n      <div class=\"col-md-3\">\n        <mc-popular-tags></mc-popular-tags>\n      </div>\n    </div>\n  </div>\n</div>\n","import {NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\nimport {RouterModule} from '@angular/router'\n\nimport {GlobalFeedComponent} from 'src/app/globalFeed/components/globalFeed/globalFeed.component'\nimport {FeedModule} from 'src/app/shared/modules/feed/feed.module'\nimport {BannerModule} from 'src/app/shared/modules/banner/banner.module'\nimport {PopularTagsModule} from '../shared/modules/popularTags/popularTags.module'\nimport {FeedTogglerModule} from 'src/app/shared/modules/feedToggler/feedToggler.module'\n\nconst routes = [\n  {\n    path: '',\n    component: GlobalFeedComponent\n  }\n]\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    FeedModule,\n    BannerModule,\n    PopularTagsModule,\n    FeedTogglerModule\n  ],\n  declarations: [GlobalFeedComponent]\n})\nexport class GlobalFeedModule {}\n","import {Component, OnInit, OnDestroy} from '@angular/core'\nimport {FormGroup, FormBuilder} from '@angular/forms'\nimport {Store, select} from '@ngrx/store'\nimport {currentUserSelector} from 'src/app/auth/store/selectors'\nimport {filter} from 'rxjs/operators'\nimport {CurrentUserInterface} from 'src/app/shared/types/currentUser.interface'\nimport {Subscription, Observer, Observable} from 'rxjs'\nimport {BackendErrorsInterface} from 'src/app/shared/types/backendErrors.interface'\nimport {\n  isSubmittingSelector,\n  validationErrorsSelector\n} from '../../store/selectors'\nimport {CurrentUserInputInterface} from 'src/app/shared/types/currentUserInput.interface'\nimport {updateCurrentUserAction} from 'src/app/auth/store/actions/updateCurrentUser.action'\nimport {logoutAction} from 'src/app/auth/store/actions/sync.action'\n\n@Component({\n  selector: 'mc-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n  form: FormGroup\n  currentUser: CurrentUserInterface\n  currentUserSubscription: Subscription\n  isSubmitting$: Observable<boolean>\n  backendErrors$: Observable<BackendErrorsInterface | null>\n\n  constructor(private fb: FormBuilder, private store: Store) {}\n\n  ngOnInit(): void {\n    this.initializeValues()\n    this.initializeListeners()\n  }\n\n  ngOnDestroy(): void {\n    this.currentUserSubscription.unsubscribe()\n  }\n  initializeValues(): void {\n    this.isSubmitting$ = this.store.pipe(select(isSubmittingSelector))\n    this.backendErrors$ = this.store.pipe(select(validationErrorsSelector))\n  }\n\n  initializeListeners(): void {\n    this.currentUserSubscription = this.store\n      .pipe(select(currentUserSelector), filter(Boolean))\n      .subscribe((currentUser: CurrentUserInterface) => {\n        this.currentUser = currentUser\n        this.initializeForm()\n      })\n  }\n\n  initializeForm(): void {\n    this.form = this.fb.group({\n      image: this.currentUser.image,\n      username: this.currentUser.username,\n      bio: this.currentUser.bio,\n      email: this.currentUser.email,\n      password: ''\n    })\n  }\n\n  submit(): void {\n    const currentUserInput: CurrentUserInputInterface = {\n      ...this.currentUser,\n      ...this.form.value\n    }\n    this.store.dispatch(updateCurrentUserAction({currentUserInput}))\n  }\n\n  logout(): void {\n    this.store.dispatch(logoutAction())\n  }\n}\n","<div class=\"settings-page\" *ngIf=\"currentUser\">\n  <div class=\"container page\">\n    <div class=\"row\">\n      <div class=\"col-md-6 offset-md-3 col-xs-12\">\n        <h1 class=\"text-xs-center\">Настройки</h1>\n        <mc-backend-error-messages\n          *ngIf=\"backendErrors$ | async\"\n          [backendErrors]=\"backendErrors$ | async\"\n        ></mc-backend-error-messages>\n        <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n          <fieldset>\n            <fieldset class=\"form-group\">\n              <input\n                type=\"text\"\n                class=\"form-control form-control-lg\"\n                formControlName=\"image\"\n                placeholder=\"URL of profile picture\"\n              />\n            </fieldset>\n\n            <fieldset class=\"form-group\">\n              <input\n                type=\"text\"\n                class=\"form-control form-control-lg\"\n                formControlName=\"username\"\n                placeholder=\"Username\"\n              />\n            </fieldset>\n\n            <fieldset class=\"form-group\">\n              <textarea\n                type=\"text\"\n                class=\"form-control form-control-lg\"\n                formControlName=\"bio\"\n                placeholder=\"Short bio about you\"\n              ></textarea>\n            </fieldset>\n\n            <fieldset class=\"form-group\">\n              <input\n                type=\"text\"\n                class=\"form-control form-control-lg\"\n                formControlName=\"email\"\n                placeholder=\"Email\"\n              />\n            </fieldset>\n\n            <fieldset class=\"form-group\">\n              <input\n                type=\"password\"\n                class=\"form-control form-control-lg\"\n                formControlName=\"password\"\n                placeholder=\"New password\"\n              />\n            </fieldset>\n            <button\n              type=\"submit\"\n              class=\"btn btn-lg btn-primary pull-xs-right\"\n              [disabled]=\"form.invalid || (isSubmitting$ | async)\"\n            >\n              Обновить настройки\n            </button>\n          </fieldset>\n        </form>\n        <hr />\n        <button class=\"btn btn-outline-danger\" (click)=\"logout()\" type=\"text\">\n          Выход\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import {NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\nimport {SettingsComponent} from 'src/app/settings/components/settings/settings.component'\nimport {RouterModule} from '@angular/router'\nimport {StoreModule} from '@ngrx/store'\nimport {reducers} from 'src/app/settings/store/reducers'\nimport {BackendErrorMessagesModule} from 'src/app/shared/modules/backendErrorMessages/backendErrorMessages.module'\nimport {ReactiveFormsModule} from '@angular/forms'\n\nconst routes = [\n  {\n    path: 'settings',\n    component: SettingsComponent\n  }\n]\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    StoreModule.forFeature('settings', reducers),\n    BackendErrorMessagesModule,\n    ReactiveFormsModule\n  ],\n  declarations: [SettingsComponent]\n})\nexport class SettingsModule {}\n","import {SettingsStateInterface} from '../types/settingsState.interface'\nimport {createReducer, on, Action} from '@ngrx/store'\nimport {\n  updateCurrentUserAction,\n  updateCurrentUserSuccessAction,\n  updateCurrentUserFailureAction\n} from 'src/app/auth/store/actions/updateCurrentUser.action'\n\nconst initialState: SettingsStateInterface = {\n  isSubmitting: false,\n  validationErrors: null\n}\n\nconst settingsReducers = createReducer(\n  initialState,\n  on(\n    updateCurrentUserAction,\n    (state): SettingsStateInterface => ({\n      ...state,\n      isSubmitting: true\n    })\n  ),\n  on(\n    updateCurrentUserSuccessAction,\n    (state): SettingsStateInterface => ({\n      ...state,\n      isSubmitting: false\n    })\n  ),\n  on(\n    updateCurrentUserFailureAction,\n    (state, action): SettingsStateInterface => ({\n      ...state,\n      isSubmitting: false,\n      validationErrors: action.errors\n    })\n  )\n)\n\nexport function reducers(state: SettingsStateInterface, action: Action) {\n  return settingsReducers(state, action)\n}\n","import {createFeatureSelector, createSelector} from '@ngrx/store'\nimport {AppStateInterface} from 'src/app/shared/types/appState.interface'\nimport {SettingsStateInterface} from '../types/settingsState.interface'\n\nexport const settingsFeatureSelector = createFeatureSelector<\n  AppStateInterface,\n  SettingsStateInterface\n>('settings')\n\nexport const isSubmittingSelector = createSelector(\n  settingsFeatureSelector,\n  (settingsState: SettingsStateInterface) => settingsState.isSubmitting\n)\n\nexport const validationErrorsSelector = createSelector(\n  settingsFeatureSelector,\n  (settingsState: SettingsStateInterface) => settingsState.validationErrors\n)\n","import {NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\nimport {AddToFavoriteComponent} from 'src/app/shared/modules/addToFavorites/components/addToFavorites/addToFavorites.component'\nimport {AddToFavoritesService} from 'src/app/shared/modules/addToFavorites/services/addToFavorites.service'\nimport {EffectsModule} from '@ngrx/effects'\nimport {AddToFavoritesEffect} from './store/effects/addToFavorites.effect'\n\n@NgModule({\n  imports: [CommonModule, EffectsModule.forFeature([AddToFavoritesEffect])],\n  declarations: [AddToFavoriteComponent],\n  exports: [AddToFavoriteComponent],\n  providers: [AddToFavoritesService]\n})\nexport class AddToFavoriteModule {}\n","import {Component, Input, OnInit} from '@angular/core'\nimport {Store} from '@ngrx/store'\nimport {addToFavoritesAction} from '../../store/actions/addToFavorites.action'\n\n@Component({\n  selector: 'mc-add-to-favorites',\n  templateUrl: './addToFavorites.component.html',\n  styleUrls: ['./addToFavorites.component.scss']\n})\nexport class AddToFavoriteComponent implements OnInit {\n  @Input('isFavorited') isFavoritedProps: boolean\n  @Input('favoritesCount') favoritesCountProps: number\n  @Input('articleSlug') articleSlugProps: string\n\n  favoritesCount: number\n  isFavorited: boolean\n\n  constructor(private store: Store) {}\n\n  ngOnInit(): void {\n    this.favoritesCount = this.favoritesCountProps\n    this.isFavorited = this.isFavoritedProps\n  }\n\n  handleLike(): void {\n    this.store.dispatch(\n      addToFavoritesAction({\n        isFavorited: this.isFavorited,\n        slug: this.articleSlugProps\n      })\n    )\n    if (this.isFavorited) {\n      this.favoritesCount = this.favoritesCount - 1\n    } else {\n      this.favoritesCount = this.favoritesCount + 1\n    }\n\n    this.isFavorited = !this.isFavorited\n  }\n}\n","<button\n  (click)=\"handleLike()\"\n  [ngClass]=\"{\n    btn: true,\n    'btn-sm': true,\n    'btn-primary': isFavorited,\n    'btn-outline-primary': !isFavorited\n  }\"\n>\n  <i class=\"ion-heart\"></i>\n  <span>&nbsp; {{ favoritesCount }}</span>\n</button>\n","import {Injectable} from '@angular/core'\nimport {HttpClient} from '@angular/common/http'\nimport {Observable} from 'rxjs'\nimport {ArticleInterface} from 'src/app/shared/types/article.interface'\nimport {environment} from 'src/environments/environment'\nimport {GetArticleResponseInterface} from 'src/app/shared/types/getArticleResponse.interface'\nimport {map} from 'rxjs/operators'\n\n@Injectable()\nexport class AddToFavoritesService {\n  constructor(private http: HttpClient) {}\n\n  addToFavorites(slug: string): Observable<ArticleInterface> {\n    const url = this.getUrl(slug)\n\n    return this.http.post(url, {}).pipe(map(this.getArticle))\n  }\n\n  removeFromFavorites(slug: string): Observable<ArticleInterface> {\n    const url = this.getUrl(slug)\n\n    return this.http.delete(url).pipe(map(this.getArticle))\n  }\n\n  getUrl(slug: string): string {\n    return `${environment.apiUrl}/articles/${slug}/favorite`\n  }\n\n  getArticle(response: GetArticleResponseInterface): ArticleInterface {\n    return response.article\n  }\n}\n","export enum ActionTypes {\n  ADD_TO_FAVORITES = '[Add to favorites] Add to favorites',\n  ADD_TO_FAVORITES_SUCCESS = '[Add to favorites] Add to favorites success',\n  ADD_TO_FAVORITES_FAILURE = '[Add to favorites] Add to favorites failure'\n}\n","import {createAction, props} from '@ngrx/store'\nimport {ActionTypes} from 'src/app/shared/modules/addToFavorites/store/actionTypes'\nimport {ArticleInterface} from 'src/app/shared/types/article.interface'\n\nexport const addToFavoritesAction = createAction(\n  ActionTypes.ADD_TO_FAVORITES,\n  props<{isFavorited: boolean; slug: string}>()\n)\n\nexport const addToFavoritesSuccessAction = createAction(\n  ActionTypes.ADD_TO_FAVORITES_SUCCESS,\n  props<{article: ArticleInterface}>()\n)\nexport const addToFavoritesFailureAction = createAction(\n  ActionTypes.ADD_TO_FAVORITES_FAILURE\n)\n","import {Injectable} from '@angular/core'\nimport {createEffect, Actions, ofType} from '@ngrx/effects'\nimport {map, catchError, switchMap} from 'rxjs/operators'\nimport {of} from 'rxjs'\n\nimport {AddToFavoritesService} from 'src/app/shared/modules/addToFavorites/services/addToFavorites.service'\nimport {\n  addToFavoritesAction,\n  addToFavoritesSuccessAction,\n  addToFavoritesFailureAction\n} from 'src/app/shared/modules/addToFavorites/store/actions/addToFavorites.action'\nimport {ArticleInterface} from 'src/app/shared/types/article.interface'\n\n@Injectable()\nexport class AddToFavoritesEffect {\n  addToFavorites$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(addToFavoritesAction),\n      switchMap(({isFavorited, slug}) => {\n        const article$ = isFavorited\n          ? this.addToFavoritesService.removeFromFavorites(slug)\n          : this.addToFavoritesService.addToFavorites(slug)\n        return article$.pipe(\n          map((article: ArticleInterface) => {\n            return addToFavoritesSuccessAction({article})\n          }),\n          catchError(() => {\n            return of(addToFavoritesFailureAction())\n          })\n        )\n      })\n    )\n  )\n\n  constructor(\n    private actions$: Actions,\n    private addToFavoritesService: AddToFavoritesService\n  ) {}\n}\n","import {NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\n\nimport {ArticleFormComponent} from './components/articleForm/articleForm.component'\nimport {BackendErrorMessagesModule} from 'src/app/shared/modules/backendErrorMessages/backendErrorMessages.module'\nimport {ReactiveFormsModule} from '@angular/forms'\n\n@NgModule({\n  imports: [CommonModule, BackendErrorMessagesModule, ReactiveFormsModule],\n  declarations: [ArticleFormComponent],\n  exports: [ArticleFormComponent]\n})\nexport class ArticleFormModule {}\n","import {Component, Input, Output, EventEmitter, OnInit} from '@angular/core'\nimport {ArticleInputInterface} from 'src/app/shared/types/articleInput.interface'\nimport {BackendErrorsInterface} from 'src/app/shared/types/backendErrors.interface'\nimport {FormGroup, FormBuilder} from '@angular/forms'\n\n@Component({\n  selector: 'mc-article-form',\n  templateUrl: './articleForm.component.html',\n  styleUrls: ['./articleForm.component.scss']\n})\nexport class ArticleFormComponent implements OnInit {\n  @Input('initialValues') initialValuesProps: ArticleInputInterface\n  @Input('isSubmitting') isSubmittingProps: boolean\n  @Input('errors') errorsProps: BackendErrorsInterface | null\n\n  @Output('articleSubmit') articleSubmitEvent = new EventEmitter<\n    ArticleInputInterface\n  >()\n\n  form: FormGroup\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.initializeForm()\n  }\n\n  initializeForm(): void {\n    this.form = this.fb.group({\n      title: this.initialValuesProps.title,\n      description: this.initialValuesProps.description,\n      body: this.initialValuesProps.body,\n      tagList: this.initialValuesProps.tagList.join(' ')\n    })\n  }\n\n  onSubmit(): void {\n    this.articleSubmitEvent.emit(this.form.value)\n  }\n}\n","<div class=\"editor-page\">\n  <div class=\"container page\">\n    <div class=\"row\">\n      <div class=\"col-md-10 offset-md-1 col-cs-12\">\n        <mc-backend-error-messages\n          *ngIf=\"errorsProps\"\n          [backendErrors]=\"errorsProps\"\n        ></mc-backend-error-messages>\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n          <fieldset>\n            <fieldset class=\"form-group\">\n              <input\n                type=\"text\"\n                class=\"form-control form-control-lg\"\n                placeholder=\"Article title\"\n                formControlName=\"title\"\n              />\n            </fieldset>\n            <fieldset class=\"form-group\">\n              <input\n                type=\"text\"\n                class=\"form-control form-control-lg\"\n                placeholder=\"What is this article about?\"\n                formControlName=\"description\"\n              />\n            </fieldset>\n            <fieldset class=\"form-group\">\n              <textarea\n                class=\"form-control form-control-lg\"\n                rows=\"8\"\n                placeholder=\"Write your article (in markdown)\"\n                formControlName=\"body\"\n              ></textarea>\n            </fieldset>\n            <fieldset class=\"form-group\">\n              <input\n                type=\"text\"\n                class=\"form-control form-control-lg\"\n                placeholder=\"Enter tags\"\n                formControlName=\"tagList\"\n              />\n            </fieldset>\n            <fieldset>\n              <button\n                type=\"submit\"\n                class=\"btn btn-lg pull-xs-right btn-primary\"\n                [disabled]=\"form.invalid || isSubmittingProps\"\n              >\n              Опубликовать статью\n              </button>\n            </fieldset>\n          </fieldset>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import {NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\n\nimport {BackendErrorMessagesComponent} from 'src/app/shared/modules/backendErrorMessages/components/backendErrorMessages/backendErrorMessages.component'\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BackendErrorMessagesComponent],\n  exports: [BackendErrorMessagesComponent]\n})\nexport class BackendErrorMessagesModule {}\n","import {Component, Input, OnInit} from '@angular/core'\nimport {BackendErrorsInterface} from 'src/app/shared/types/backendErrors.interface'\n\n@Component({\n  selector: 'mc-backend-error-messages',\n  templateUrl: './backendErrorMessages.component.html',\n  styleUrls: ['./backendErrorMessages.components.scss']\n})\nexport class BackendErrorMessagesComponent implements OnInit {\n  @Input('backendErrors') backendErrorsProps: BackendErrorsInterface\n\n  errorMessages: string[]\n\n  ngOnInit(): void {\n    this.errorMessages = Object.keys(this.backendErrorsProps).map(\n      (name: string) => {\n        const messages = this.backendErrorsProps[name].join(' ')\n        return `${name} ${messages}`\n      }\n    )\n  }\n}\n","<ul class=\"error-messages\">\n  <li *ngFor=\"let errorMessage of errorMessages\">\n    {{ errorMessage }}\n  </li>\n</ul>\n","import {NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\nimport {BannerComponent} from 'src/app/shared/modules/banner/components/banner/banner.component'\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BannerComponent],\n  exports: [BannerComponent]\n})\nexport class BannerModule {}\n","import {Component} from '@angular/core'\n\n@Component({\n  selector: 'mc-banner',\n  templateUrl: './banner.component.html'\n})\nexport class BannerComponent {}\n","<div class=\"banner\">\n  <div class=\"container\">\n    <h1>SocialAidos</h1>\n    <p>Место для обмена знаниями</p>\n  </div>\n</div>\n","import {Component, Input} from '@angular/core'\n\n@Component({\n  selector: 'mc-error-message',\n  template: '<div>{{messageProps}}</div>'\n})\nexport class ErrorMessageComponent {\n  @Input('message') messageProps: string = 'Something went wrong'\n}\n","import {NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\n\nimport {ErrorMessageComponent} from 'src/app/shared/modules/errorMessage/components/errorMessage/errorMessage.component'\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [ErrorMessageComponent],\n  exports: [ErrorMessageComponent]\n})\nexport class ErrorMessageModule {}\n","import {\n  Component,\n  Input,\n  OnInit,\n  OnDestroy,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core'\nimport {Store, select} from '@ngrx/store'\nimport {Observable, Subscription} from 'rxjs'\nimport {Router, ActivatedRoute, Params} from '@angular/router'\nimport {stringify, parseUrl} from 'query-string'\n\nimport {getFeedAction} from 'src/app/shared/modules/feed/store/actions/getFeed.action'\nimport {GetFeedResponseInterface} from 'src/app/shared/modules/feed/types/getFeedResponse.interface'\nimport {\n  feedSelector,\n  errorSelector,\n  isLoadingSelector\n} from 'src/app/shared/modules/feed/store/selectors'\nimport {environment} from 'src/environments/environment'\n\n@Component({\n  selector: 'mc-feed',\n  templateUrl: './feed.component.html',\n  styleUrls: ['./feed.component.scss']\n})\nexport class FeedComponent implements OnInit, OnDestroy, OnChanges {\n  @Input('apiUrl') apiUrlProps: string\n\n  feed$: Observable<GetFeedResponseInterface | null>\n  error$: Observable<string | null>\n  isLoading$: Observable<boolean>\n  limit = environment.limit\n  baseUrl: string\n  queryParamsSubscription: Subscription\n  currentPage: number\n\n  constructor(\n    private store: Store,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    console.log('initialize feed', this.apiUrlProps)\n    this.initializeValues()\n    this.initializeListeners()\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const isApiUrlChanged =\n      !changes.apiUrlProps.firstChange &&\n      changes.apiUrlProps.currentValue !== changes.apiUrlProps.previousValue\n    if (isApiUrlChanged) {\n      this.fetchFeed()\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.queryParamsSubscription.unsubscribe()\n  }\n\n  initializeListeners(): void {\n    this.queryParamsSubscription = this.route.queryParams.subscribe(\n      (params: Params) => {\n        this.currentPage = Number(params.page || '1')\n        console.log('fetchFeed')\n        this.fetchFeed()\n      }\n    )\n  }\n\n  initializeValues(): void {\n    this.feed$ = this.store.pipe(select(feedSelector))\n    this.error$ = this.store.pipe(select(errorSelector))\n    this.isLoading$ = this.store.pipe(select(isLoadingSelector))\n    this.baseUrl = this.router.url.split('?')[0]\n  }\n\n  fetchFeed(): void {\n    const offset = this.currentPage * this.limit - this.limit\n    const parsedUrl = parseUrl(this.apiUrlProps)\n    const stringifiedParams = stringify({\n      limit: this.limit,\n      offset,\n      ...parsedUrl.query\n    })\n    const apiUrlWithParams = `${parsedUrl.url}?${stringifiedParams}`\n    this.store.dispatch(getFeedAction({url: apiUrlWithParams}))\n  }\n}\n","<mc-loading *ngIf=\"isLoading$ | async\"></mc-loading>\n\n<mc-error-message *ngIf=\"error$ | async\"></mc-error-message>\n\n<div *ngIf=\"feed$ | async\">\n  <div\n    class=\"article-preview\"\n    *ngFor=\"let article of (feed$ | async)?.articles\"\n  >\n    <div class=\"article-meta\">\n      <a [routerLink]=\"['/profiles', article.author.username]\">\n        <img [src]=\"article.author.image\" />\n      </a>\n      <div class=\"info\">\n        <a [routerLink]=\"['/profiles', article.author.username]\" class=\"author\">\n          {{ article.author.username }}\n        </a>\n        <span class=\"date\">{{ article.createdAt }}</span>\n      </div>\n      <div class=\"pull-xs-right\">\n        <mc-add-to-favorites\n          [isFavorited]=\"article.favorited\"\n          [articleSlug]=\"article.slug\"\n          [favoritesCount]=\"article.favoritesCount\"\n        >\n        </mc-add-to-favorites>\n      </div>\n    </div>\n    <a [routerLink]=\"['/articles', article.slug]\" class=\"preview-link\">\n      <h1>{{ article.title }}</h1>\n      <p>{{ article.description }}</p>\n      <span>Узнать больше...</span>\n      <mc-tag-list [tags]=\"article.tagList\"></mc-tag-list>\n    </a>\n  </div>\n  <mc-pagination\n    [total]=\"(feed$ | async)?.articlesCount\"\n    [limit]=\"limit\"\n    [url]=\"baseUrl\"\n    [currentPage]=\"currentPage\"\n  ></mc-pagination>\n</div>\n","import {NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\nimport {EffectsModule} from '@ngrx/effects'\nimport {RouterModule} from '@angular/router'\nimport {StoreModule} from '@ngrx/store'\n\nimport {FeedComponent} from 'src/app/shared/modules/feed/components/feed/feed.component'\nimport {FeedService} from 'src/app/shared/modules/feed/services/feed.service'\nimport {GetFeedEffect} from 'src/app/shared/modules/feed/store/effects/getFeed.effect'\nimport {reducers} from 'src/app/shared/modules/feed/store/reducers'\nimport {ErrorMessageModule} from 'src/app/shared/modules/errorMessage/errorMessage.module'\nimport {LoadingModule} from 'src/app/shared/modules/loading/loading.module'\nimport {PaginationModule} from 'src/app/shared/modules/pagination/pagination.module'\nimport {TagListModule} from '../tagList/tagList.module'\nimport {AddToFavoriteModule} from '../addToFavorites/addToFavorites.module'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    EffectsModule.forFeature([GetFeedEffect]),\n    StoreModule.forFeature('feed', reducers),\n    RouterModule,\n    ErrorMessageModule,\n    LoadingModule,\n    PaginationModule,\n    TagListModule,\n    AddToFavoriteModule\n  ],\n  declarations: [FeedComponent],\n  exports: [FeedComponent],\n  providers: [FeedService]\n})\nexport class FeedModule {}\n","import {Injectable} from '@angular/core'\nimport {Observable} from 'rxjs'\nimport {GetFeedResponseInterface} from 'src/app/shared/modules/feed/types/getFeedResponse.interface'\nimport {HttpClient} from '@angular/common/http'\nimport {environment} from 'src/environments/environment'\n\n@Injectable()\nexport class FeedService {\n  constructor(private http: HttpClient) {}\n\n  getFeed(url: string): Observable<GetFeedResponseInterface> {\n    const fullUrl = environment.apiUrl + url\n    return this.http.get<GetFeedResponseInterface>(fullUrl)\n  }\n}\n","export enum ActionTypes {\n  GET_FEED = '[Feed] Get feed',\n  GET_FEED_SUCCESS = '[Feed] Get feed success',\n  GET_FEED_FAILURE = '[Feed] Get feed failure'\n}\n","import {createAction, props} from '@ngrx/store'\nimport {ActionTypes} from 'src/app/shared/modules/feed/store/actionTypes'\nimport {GetFeedResponseInterface} from 'src/app/shared/modules/feed/types/getFeedResponse.interface'\n\nexport const getFeedAction = createAction(\n  ActionTypes.GET_FEED,\n  props<{url: string}>()\n)\n\nexport const getFeedSuccessAction = createAction(\n  ActionTypes.GET_FEED_SUCCESS,\n  props<{feed: GetFeedResponseInterface}>()\n)\n\nexport const getFeedFailureAction = createAction(ActionTypes.GET_FEED_FAILURE)\n","import {Injectable} from '@angular/core'\nimport {createEffect, Actions, ofType} from '@ngrx/effects'\nimport {map, catchError, switchMap} from 'rxjs/operators'\nimport {of} from 'rxjs'\n\nimport {FeedService} from 'src/app/shared/modules/feed/services/feed.service'\nimport {\n  getFeedAction,\n  getFeedSuccessAction,\n  getFeedFailureAction\n} from 'src/app/shared/modules/feed/store/actions/getFeed.action'\nimport {GetFeedResponseInterface} from 'src/app/shared/modules/feed/types/getFeedResponse.interface'\n\n@Injectable()\nexport class GetFeedEffect {\n  getFeed$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(getFeedAction),\n      switchMap(({url}) => {\n        return this.feedService.getFeed(url).pipe(\n          map((feed: GetFeedResponseInterface) => {\n            return getFeedSuccessAction({feed})\n          }),\n\n          catchError(() => {\n            return of(getFeedFailureAction())\n          })\n        )\n      })\n    )\n  )\n\n  constructor(private actions$: Actions, private feedService: FeedService) {}\n}\n","import {createReducer, on, Action} from '@ngrx/store'\nimport {routerNavigationAction} from '@ngrx/router-store'\n\nimport {FeedStateInterface} from 'src/app/shared/modules/feed/types/feedState.interface'\nimport {\n  getFeedAction,\n  getFeedSuccessAction,\n  getFeedFailureAction\n} from 'src/app/shared/modules/feed/store/actions/getFeed.action'\n\nconst initialState: FeedStateInterface = {\n  data: null,\n  isLoading: false,\n  error: null\n}\n\nconst feedReducer = createReducer(\n  initialState,\n  on(\n    getFeedAction,\n    (state): FeedStateInterface => ({\n      ...state,\n      isLoading: true\n    })\n  ),\n  on(\n    getFeedSuccessAction,\n    (state, action): FeedStateInterface => ({\n      ...state,\n      isLoading: false,\n      data: action.feed\n    })\n  ),\n  on(\n    getFeedFailureAction,\n    (state): FeedStateInterface => ({\n      ...state,\n      isLoading: false\n    })\n  ),\n  on(routerNavigationAction, (): FeedStateInterface => initialState)\n)\n\nexport function reducers(state: FeedStateInterface, action: Action) {\n  return feedReducer(state, action)\n}\n","import {createFeatureSelector, createSelector} from '@ngrx/store'\n\nimport {AppStateInterface} from 'src/app/shared/types/appState.interface'\nimport {FeedStateInterface} from 'src/app/shared/modules/feed/types/feedState.interface'\n\nexport const feedFeatureSelector = createFeatureSelector<\n  AppStateInterface,\n  FeedStateInterface\n>('feed')\n\nexport const isLoadingSelector = createSelector(\n  feedFeatureSelector,\n  (feedState: FeedStateInterface) => feedState.isLoading\n)\n\nexport const errorSelector = createSelector(\n  feedFeatureSelector,\n  (feedState: FeedStateInterface) => feedState.error\n)\n\nexport const feedSelector = createSelector(\n  feedFeatureSelector,\n  (feedState: FeedStateInterface) => feedState.data\n)\n","import {Component, Input, OnInit} from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { Store, select } from '@ngrx/store'\nimport { isLoggedInSelector } from 'src/app/auth/store/selectors'\n\n@Component({\n  selector: 'mc-feed-toggler',\n  templateUrl: './feedToggler.component.html'\n})\nexport class FeedTogglerComponent implements OnInit {\n  @Input('tagName') tagNameProps: string\n\n  isLoggedIn$: Observable<boolean>\n\n  constructor(private store: Store) {}\n\n  ngOnInit(): void {\n    this.initializeValues()\n  }\n\n  initializeValues(): void {\n    this.isLoggedIn$ = this.store.pipe(select(isLoggedInSelector))\n  }\n}\n","<div class=\"feed-toggle\">\n  <ul class=\"nav nav-pills outline-active\">\n    <li class=\"nav-item\" *ngIf=\"isLoggedIn$ | async\">\n      <a [routerLink]=\"['/feed']\" class=\"nav-link\" routerLinkActive=\"active\"\n        >Личный канал</a\n      >\n    </li>\n\n    <li class=\"nav-item\">\n      <a\n        [routerLink]=\"['/']\"\n        class=\"nav-link\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{exact: true}\"\n        >Глобальный канал</a\n      >\n    </li>\n\n    <li class=\"nav-item\" *ngIf=\"tagNameProps\">\n      <a\n        [routerLink]=\"['/tags', tagNameProps]\"\n        class=\"nav-link\"\n        routerLinkActive=\"active\"\n      >\n        <i class=\"ion-pound\"></i>\n        {{ tagNameProps }}\n      </a>\n    </li>\n  </ul>\n</div>\n","import {NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\n\nimport {FeedTogglerComponent} from 'src/app/shared/modules/feedToggler/components/feedToggler/feedToggler.component'\nimport {RouterModule} from '@angular/router'\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [FeedTogglerComponent],\n  exports: [FeedTogglerComponent]\n})\nexport class FeedTogglerModule {}\n","import {Component} from '@angular/core'\n\n@Component({\n  selector: 'mc-loading',\n  template: '<div>Loading...</div>'\n})\nexport class LoadingComponent {}\n","import {NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\n\nimport {LoadingComponent} from 'src/app/shared/modules/loading/components/loading/loading.component'\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [LoadingComponent],\n  exports: [LoadingComponent]\n})\nexport class LoadingModule {}\n","import {Component, Input, OnInit} from '@angular/core'\nimport {UtilsService} from 'src/app/shared/services/utils.service'\n\n@Component({\n  selector: 'mc-pagination',\n  templateUrl: './pagination.component.html'\n})\nexport class PaginationComponent implements OnInit {\n  @Input('total') totalProps: number\n  @Input('limit') limitProps: number\n  @Input('currentPage') currentPageProps: number\n  @Input('url') urlProps: string\n\n  pagesCount: number\n  pages: number[]\n\n  constructor(private utilsService: UtilsService) {}\n\n  ngOnInit(): void {\n    this.pagesCount = Math.ceil(this.totalProps / this.limitProps)\n    this.pages = this.utilsService.range(1, this.pagesCount)\n  }\n}\n","<ul class=\"pagination\">\n  <li\n    *ngFor=\"let page of pages\"\n    class=\"page-item\"\n    [ngClass]=\"{active: currentPageProps === page}\"\n  >\n    <a [routerLink]=\"[urlProps]\" [queryParams]=\"{page: page}\" class=\"page-link\">\n      {{ page }}\n    </a>\n  </li>\n</ul>\n","import {NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\nimport {RouterModule} from '@angular/router'\n\nimport {PaginationComponent} from 'src/app/shared/modules/pagination/components/pagination/pagination.component'\nimport {UtilsService} from 'src/app/shared/services/utils.service'\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [PaginationComponent],\n  exports: [PaginationComponent],\n  providers: [UtilsService]\n})\nexport class PaginationModule {}\n","import {Component, OnInit} from '@angular/core'\nimport {Store, select} from '@ngrx/store'\n\nimport {getPopularTagsAction} from 'src/app/shared/modules/popularTags/store/actions/getPopularTags.action'\nimport {Observable} from 'rxjs'\nimport {PopularTagType} from 'src/app/shared/types/popularTag.type'\nimport {\n  popularTagsSelector,\n  isLoadingSelector,\n  errorSelector\n} from 'src/app/shared/modules/popularTags/store/selectors'\n\n@Component({\n  selector: 'mc-popular-tags',\n  templateUrl: './popularTags.component.html'\n})\nexport class PopularTagsComponent implements OnInit {\n  popularTags$: Observable<PopularTagType[] | null>\n  isLoading$: Observable<boolean>\n  error$: Observable<string | null>\n\n  constructor(private store: Store) {}\n\n  ngOnInit(): void {\n    this.initializeValues()\n    this.fetchData()\n  }\n\n  initializeValues(): void {\n    this.popularTags$ = this.store.pipe(select(popularTagsSelector))\n    this.isLoading$ = this.store.pipe(select(isLoadingSelector))\n    this.error$ = this.store.pipe(select(errorSelector))\n  }\n\n  fetchData(): void {\n    this.store.dispatch(getPopularTagsAction())\n  }\n}\n","<mc-loading *ngIf=\"isLoading$ | async\"></mc-loading>\n\n<mc-error-message\n  *ngIf=\"error$ | async\"\n  [message]=\"error$ | async\"\n></mc-error-message>\n\n<div class=\"sidebar\" *ngIf=\"popularTags$ | async\">\n  <p>Популярный теги</p>\n  <div class=\"tag-list\">\n    <a\n      *ngFor=\"let popularTag of popularTags$ | async\"\n      [routerLink]=\"['/tags', popularTag]\"\n      class=\"tag-default tag-pill\"\n    >\n      {{ popularTag }}\n    </a>\n  </div>\n</div>\n","import {NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\nimport {StoreModule} from '@ngrx/store'\nimport {EffectsModule} from '@ngrx/effects'\nimport {RouterModule} from '@angular/router'\n\nimport {reducers} from 'src/app/shared/modules/popularTags/store/reducers'\nimport {GetPopularTagsEffect} from 'src/app/shared/modules/popularTags/store/effects/getPopularTags.effect'\nimport {PopularTagsComponent} from 'src/app/shared/modules/popularTags/components/popularTags/popularTags.component'\nimport {LoadingModule} from 'src/app/shared/modules/loading/loading.module'\nimport {ErrorMessageModule} from 'src/app/shared/modules/errorMessage/errorMessage.module'\nimport {PopularTagsService} from 'src/app/shared/modules/popularTags/services/popularTags.service'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forFeature('popularTags', reducers),\n    EffectsModule.forFeature([GetPopularTagsEffect]),\n    RouterModule,\n    LoadingModule,\n    ErrorMessageModule\n  ],\n  declarations: [PopularTagsComponent],\n  exports: [PopularTagsComponent],\n  providers: [PopularTagsService]\n})\nexport class PopularTagsModule {}\n","import {Injectable} from '@angular/core'\nimport {HttpClient} from '@angular/common/http'\nimport {Observable} from 'rxjs'\nimport {map} from 'rxjs/operators'\n\nimport {PopularTagType} from 'src/app/shared/types/popularTag.type'\nimport {environment} from 'src/environments/environment'\nimport {GetPopularTagsResponseInterface} from 'src/app/shared/modules/popularTags/types/getPopularTagsResponse.interface'\n\n@Injectable()\nexport class PopularTagsService {\n  constructor(private http: HttpClient) {}\n\n  getPopularTags(): Observable<PopularTagType[]> {\n    const url = environment.apiUrl + '/tags'\n    return this.http.get(url).pipe(\n      map((response: GetPopularTagsResponseInterface) => {\n        return response.tags\n      })\n    )\n  }\n}\n","export enum ActionTypes {\n  GET_POPULAR_TAGS = '[Popular Tags] Get popular tags',\n  GET_POPULAR_TAGS_SUCCESS = '[Popular Tags] Get popular tags success',\n  GET_POPULAR_TAGS_FAILURE = '[Popular Tags] Get popular tags failure'\n}\n","import {createAction, props} from '@ngrx/store'\n\nimport {ActionTypes} from 'src/app/shared/modules/popularTags/store/actionTypes'\nimport {PopularTagType} from 'src/app/shared/types/popularTag.type'\n\nexport const getPopularTagsAction = createAction(ActionTypes.GET_POPULAR_TAGS)\n\nexport const getPopularTagsSuccessAction = createAction(\n  ActionTypes.GET_POPULAR_TAGS_SUCCESS,\n  props<{popularTags: PopularTagType[]}>()\n)\n\nexport const getPopularTagsFailure = createAction(\n  ActionTypes.GET_POPULAR_TAGS_FAILURE\n)\n","import {Injectable} from '@angular/core'\nimport {createEffect, Actions, ofType} from '@ngrx/effects'\nimport {map, catchError, switchMap} from 'rxjs/operators'\nimport {of} from 'rxjs'\n\nimport {PopularTagsService} from 'src/app/shared/modules/popularTags/services/popularTags.service'\nimport {\n  getPopularTagsAction,\n  getPopularTagsSuccessAction,\n  getPopularTagsFailure\n} from 'src/app/shared/modules/popularTags/store/actions/getPopularTags.action'\nimport {PopularTagType} from 'src/app/shared/types/popularTag.type'\n\n@Injectable()\nexport class GetPopularTagsEffect {\n  getPopularTags$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(getPopularTagsAction),\n      switchMap(() => {\n        return this.popularTagsService.getPopularTags().pipe(\n          map((popularTags: PopularTagType[]) => {\n            return getPopularTagsSuccessAction({popularTags})\n          }),\n\n          catchError(() => {\n            return of(getPopularTagsFailure())\n          })\n        )\n      })\n    )\n  )\n\n  constructor(\n    private actions$: Actions,\n    private popularTagsService: PopularTagsService\n  ) {}\n}\n","import {PopularTagsStateInterface} from '../types/popularTagsState.interface'\nimport {createReducer, on, Action} from '@ngrx/store'\nimport {\n  getPopularTagsAction,\n  getPopularTagsSuccessAction,\n  getPopularTagsFailure\n} from './actions/getPopularTags.action'\n\nconst initialState: PopularTagsStateInterface = {\n  data: null,\n  isLoading: false,\n  error: null\n}\n\nconst popularTagsReducer = createReducer(\n  initialState,\n  on(\n    getPopularTagsAction,\n    (state): PopularTagsStateInterface => ({\n      ...state,\n      isLoading: true\n    })\n  ),\n  on(\n    getPopularTagsSuccessAction,\n    (state, action): PopularTagsStateInterface => ({\n      ...state,\n      isLoading: false,\n      data: action.popularTags\n    })\n  ),\n  on(\n    getPopularTagsFailure,\n    (state): PopularTagsStateInterface => ({\n      ...state,\n      isLoading: false\n    })\n  )\n)\n\nexport function reducers(state: PopularTagsStateInterface, action: Action) {\n  return popularTagsReducer(state, action)\n}\n","import {createFeatureSelector, createSelector} from '@ngrx/store'\nimport {AppStateInterface} from 'src/app/shared/types/appState.interface'\nimport {PopularTagsStateInterface} from '../types/popularTagsState.interface'\n\nexport const popularTagsFeatureSelector = createFeatureSelector<\n  AppStateInterface,\n  PopularTagsStateInterface\n>('popularTags')\n\nexport const popularTagsSelector = createSelector(\n  popularTagsFeatureSelector,\n  (popularTagsState: PopularTagsStateInterface) => popularTagsState.data\n)\n\nexport const isLoadingSelector = createSelector(\n  popularTagsFeatureSelector,\n  (popularTagsState: PopularTagsStateInterface) => popularTagsState.isLoading\n)\n\nexport const errorSelector = createSelector(\n  popularTagsFeatureSelector,\n  (popularTagsState: PopularTagsStateInterface) => popularTagsState.error\n)\n","import {Component, Input} from '@angular/core'\n\nimport {PopularTagType} from 'src/app/shared/types/popularTag.type'\n\n@Component({\n  selector: 'mc-tag-list',\n  templateUrl: './tagList.component.html'\n})\nexport class TagListComponent {\n  @Input('tags') tagsProps: PopularTagType[]\n}\n","<ul class=\"tag-list\">\n  <li *ngFor=\"let tag of tagsProps\" class=\"tag-default tag-pill tag-outline\">\n    {{ tag }}\n  </li>\n</ul>\n","import {NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\nimport {TagListComponent} from './components/tagList/tagList.component'\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TagListComponent],\n  exports: [TagListComponent]\n})\nexport class TagListModule {}\n","import {Component, OnInit} from '@angular/core'\nimport {Observable} from 'rxjs'\nimport {Store, select} from '@ngrx/store'\n\nimport {CurrentUserInterface} from 'src/app/shared/types/currentUser.interface'\nimport {\n  isLoggedInSelector,\n  isAnonymousSelector,\n  currentUserSelector\n} from 'src/app/auth/store/selectors'\n\n@Component({\n  selector: 'mc-topbar',\n  templateUrl: './topBar.component.html',\n  styleUrls: ['./topBar.component.scss']\n})\nexport class TopBarComponent implements OnInit {\n  isLoggedIn$: Observable<boolean>\n  isAnonymous$: Observable<boolean>\n  currentUser$: Observable<CurrentUserInterface | null>\n\n  constructor(private store: Store) {}\n\n  ngOnInit(): void {\n    this.isLoggedIn$ = this.store.pipe(select(isLoggedInSelector))\n    this.isAnonymous$ = this.store.pipe(select(isAnonymousSelector))\n    this.currentUser$ = this.store.pipe(select(currentUserSelector))\n  }\n}\n","<nav class=\"navbar navbar-light\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" [routerLink]=\"['/']\">\n      SocialAidos\n    </a>\n    <ul class=\"nav navbar-nav pull-xs-right\">\n      <li class=\"nav-item\">\n        <a [routerLink]=\"['/']\" class=\"nav-link\">\n          Главная\n        </a>\n      </li>\n      <ng-container *ngIf=\"isLoggedIn$ | async\">\n        <li class=\"nav-item\">\n          <a [routerLink]=\"['/articles/new']\" class=\"nav-link\">\n            <i class=\"ion-compose\"></i>\n            &nbsp; Новый пост\n          </a>\n        </li>\n        <li class=\"nav-item\">\n          <a [routerLink]=\"['/settings']\" class=\"nav-link\">\n            <i class=\"ion-gear-a\"></i>\n            &nbsp; Настройки\n          </a>\n        </li>\n        <li class=\"nav-item\">\n          <a\n            [routerLink]=\"['/profiles', (currentUser$ | async).username]\"\n            class=\"nav-link\"\n          >\n            <img class=\"user-pic\" [src]=\"(currentUser$ | async).image\" />\n            &nbsp; {{ (currentUser$ | async).username }}\n          </a>\n        </li>\n      </ng-container>\n      <ng-container *ngIf=\"isAnonymous$ | async\">\n        <li class=\"nav-item\">\n          <a [routerLink]=\"['/login']\" class=\"nav-link\">\n            Войти\n          </a>\n        </li>\n        <li class=\"nav-item\">\n          <a [routerLink]=\"['/register']\" class=\"nav-link\">\n            Зарегистрироваться \n          </a>\n        </li>\n      </ng-container>\n    </ul>\n  </div>\n</nav>\n","import {NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\nimport {RouterModule} from '@angular/router'\n\nimport {TopBarComponent} from 'src/app/shared/modules/topBar/components/topBar/topBar.component'\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [TopBarComponent],\n  exports: [TopBarComponent]\n})\nexport class TopBarModule {}\n","import {Injectable} from '@angular/core'\nimport {Observable} from 'rxjs'\nimport {HttpClient} from '@angular/common/http'\nimport {map} from 'rxjs/operators'\n\nimport {environment} from 'src/environments/environment'\nimport {ArticleInterface} from '../types/article.interface'\nimport {GetArticleResponseInterface} from 'src/app/shared/types/getArticleResponse.interface'\n\n@Injectable()\nexport class ArticleService {\n  constructor(private http: HttpClient) {}\n\n  getArticle(slug: string): Observable<ArticleInterface> {\n    const fullUrl = `${environment.apiUrl}/articles/${slug}`\n    return this.http.get<GetArticleResponseInterface>(fullUrl).pipe(\n      map((response: GetArticleResponseInterface) => {\n        return response.article\n      })\n    )\n  }\n}\n","import {Injectable} from '@angular/core'\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpEvent\n} from '@angular/common/http'\nimport {Observable} from 'rxjs'\n\nimport {PersistanceService} from 'src/app//shared/services/persistance.service'\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private persistanceService: PersistanceService) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const token = this.persistanceService.get('accessToken')\n    request = request.clone({\n      setHeaders: {\n        Authorization: token ? `Token ${token}` : ''\n      }\n    })\n\n    return next.handle(request)\n  }\n}\n","import {Injectable} from '@angular/core'\n\n@Injectable()\nexport class PersistanceService {\n  set(key: string, data: any): void {\n    try {\n      localStorage.setItem(key, JSON.stringify(data))\n    } catch (e) {\n      console.error('Error saving to localStorage', e)\n    }\n  }\n\n  get(key: string): any {\n    try {\n      return JSON.parse(localStorage.getItem(key))\n    } catch (e) {\n      console.error('Error getting data from localStorage', e)\n      return null\n    }\n  }\n}\n","import {Injectable} from '@angular/core'\n\n@Injectable()\nexport class UtilsService {\n  range(start: number, end: number): number[] {\n    return [...Array(end).keys()].map(el => el + start)\n  }\n}\n","import {Component, OnInit} from '@angular/core'\nimport {ActivatedRoute} from '@angular/router'\n\n@Component({\n  selector: 'mc-tag-feed',\n  templateUrl: './tagFeed.component.html',\n  styleUrls: ['./tagFeed.component.scss']\n})\nexport class TagFeedComponent implements OnInit {\n  tagName: string\n  apiUrl: string\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.tagName = this.route.snapshot.paramMap.get('slug')\n    this.apiUrl = `/articles?tag=${this.tagName}`\n  }\n}\n","<div class=\"home-page\">\n  <mc-banner></mc-banner>\n  <div class=\"container page\">\n    <div class=\"row\">\n      <div class=\"col-md-9\">\n        <mc-feed-toggler [tagName]=\"tagName\"></mc-feed-toggler>\n        <mc-feed [apiUrl]=\"apiUrl\"></mc-feed>\n      </div>\n      <div class=\"col-md-3\">\n        <mc-popular-tags></mc-popular-tags>\n      </div>\n    </div>\n  </div>\n</div>\n","import {NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\nimport {RouterModule} from '@angular/router'\n\nimport {TagFeedComponent} from 'src/app/tagFeed/components/tagFeed/tagFeed.component'\nimport {FeedModule} from 'src/app/shared/modules/feed/feed.module'\nimport {BannerModule} from 'src/app/shared/modules/banner/banner.module'\nimport {PopularTagsModule} from '../shared/modules/popularTags/popularTags.module'\nimport {FeedTogglerModule} from 'src/app/shared/modules/feedToggler/feedToggler.module'\n\nconst routes = [\n  {\n    path: 'tags/:slug',\n    component: TagFeedComponent\n  }\n]\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    FeedModule,\n    BannerModule,\n    PopularTagsModule,\n    FeedTogglerModule\n  ],\n  declarations: [TagFeedComponent]\n})\nexport class TagFeedModule {}\n","import {Component, OnInit} from '@angular/core'\nimport {UserProfileInterface} from '../../types/userProfile.interface'\nimport {Observable, Subscription, combineLatest} from 'rxjs'\nimport {Store, select} from '@ngrx/store'\nimport {getUserProfileAction} from '../../store/actions/getUserProfile.action'\nimport {ActivatedRoute, Router, Params} from '@angular/router'\nimport {\n  isLoadingSelector,\n  errorSelector,\n  userProfileSelector\n} from '../../store/selectors'\nimport {currentUserSelector} from 'src/app/auth/store/selectors'\nimport {map, filter} from 'rxjs/operators'\nimport {CurrentUserInterface} from 'src/app/shared/types/currentUser.interface'\n\n@Component({\n  selector: 'mc-user-profile',\n  templateUrl: './userProfile.component.html',\n  styleUrls: ['./userProfile.component.scss']\n})\nexport class UserProfileComponent implements OnInit {\n  userProfile: UserProfileInterface\n  isLoading$: Observable<boolean>\n  error$: Observable<string | null>\n  userProfileSubscription: Subscription\n  slug: string\n  isCurrentUserProfile$: Observable<boolean>\n\n  constructor(\n    private store: Store,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.initializeValues()\n    this.initializeListeners()\n  }\n  initializeValues(): void {\n    this.slug = this.route.snapshot.paramMap.get('slug')\n    this.isLoading$ = this.store.pipe(select(isLoadingSelector))\n    this.error$ = this.store.pipe(select(errorSelector))\n    this.isCurrentUserProfile$ = combineLatest(\n      this.store.pipe(select(currentUserSelector), filter(Boolean)),\n      this.store.pipe(select(userProfileSelector), filter(Boolean))\n    ).pipe(\n      map(\n        ([currentUser, userProfile]: [\n          CurrentUserInterface,\n          UserProfileInterface\n        ]) => {\n          return currentUser.username === userProfile.username\n        }\n      )\n    )\n  }\n\n  getApiUrl(): string {\n    const isFavorites = this.router.url.includes('favorites')\n    return isFavorites\n      ? `/articles?favorited=${this.slug}`\n      : `/articles?author=${this.slug}`\n  }\n\n  initializeListeners(): void {\n    this.userProfileSubscription = this.store\n      .pipe(select(userProfileSelector))\n      .subscribe((userProfile: UserProfileInterface) => {\n        this.userProfile = userProfile\n      })\n\n    this.route.params.subscribe((params: Params) => {\n      this.slug = params.slug\n      this.fetchUserProfile()\n    })\n  }\n\n  fetchUserProfile(): void {\n    this.store.dispatch(getUserProfileAction({slug: this.slug}))\n  }\n}\n","<div class=\"profile-page\" *ngIf=\"userProfile\">\n  <div class=\"user-info\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-md-10 offset-md-1\">\n          <img class=\"user-img\" [src]=\"userProfile.image\" />\n          <h4>{{ userProfile.username }}</h4>\n          <p>{{ userProfile.bio }}</p>\n          <div>\n            \n            <a\n              *ngIf=\"isCurrentUserProfile$ | async\"\n              class=\"btn btn-sm btn-outline-secondary action-btn\"\n              [routerLink]=\"['/settings']\"\n              >Изменить настройки профиля</a\n            >\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-xs-12 col-md-10 offset-md-1\">\n        <div class=\"articles-toggle\">\n          <ul class=\"nav nav-pills outline-active\">\n            <li class=\"nav-item\">\n              <!-- We need this hack because angular doesnt understand route change -->\n              <!-- https://github.com/angular/angular/issues/18469 -->\n              <a\n                [routerLink]=\"['/profiles', userProfile.username]\"\n                class=\"nav-link\"\n                routerLinkActive=\"active\"\n                [routerLinkActiveOptions]=\"{\n                  exact: true,\n                  __change_detection_hack__: userProfile.username\n                }\"\n              >\n                Мои посты\n              </a>\n            </li>\n            <li class=\"nav-item\">\n              <a\n                [routerLink]=\"['/profiles', userProfile.username, 'favorites']\"\n                class=\"nav-link\"\n                routerLinkActive=\"active\"\n                [routerLinkActiveOptions]=\"{\n                  exact: true,\n                  __change_detection_hack__: userProfile.username\n                }\"\n              >\n                Избранные посты\n              </a>\n            </li>\n          </ul>\n        </div>\n        <mc-feed [apiUrl]=\"getApiUrl()\"></mc-feed>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Injectable} from '@angular/core'\nimport {Observable} from 'rxjs'\nimport {UserProfileInterface} from '../types/userProfile.interface'\nimport {HttpClient} from '@angular/common/http'\nimport {environment} from 'src/environments/environment'\nimport {map} from 'rxjs/operators'\nimport {GetUserProfileResponseInterface} from '../types/getUserProfileResponse.interface'\n\n@Injectable()\nexport class UserProfileService {\n  constructor(private http: HttpClient) {}\n\n  getUserProfile(slug: string): Observable<UserProfileInterface> {\n    const url = `${environment.apiUrl}/profiles/${slug}`\n\n    return this.http\n      .get(url)\n      .pipe(\n        map((response: GetUserProfileResponseInterface) => response.profile)\n      )\n  }\n}\n","export enum ActionTypes {\n  GET_USER_PROFILE = '[User Profile] Get user profile',\n  GET_USER_PROFILE_SUCCESS = '[User Profile] Get user profile success',\n  GET_USER_PROFILE_FAILURE = '[User Profile] Get user profile failure'\n}\n","import {createAction, props} from '@ngrx/store'\nimport {ActionTypes} from '../actionTypes'\nimport {UserProfileInterface} from '../../types/userProfile.interface'\n\nexport const getUserProfileAction = createAction(\n  ActionTypes.GET_USER_PROFILE,\n  props<{slug: string}>()\n)\n\nexport const getUserProfileSuccessAction = createAction(\n  ActionTypes.GET_USER_PROFILE_SUCCESS,\n  props<{userProfile: UserProfileInterface}>()\n)\n\nexport const getUserProfileFailureAction = createAction(\n  ActionTypes.GET_USER_PROFILE_FAILURE\n)\n","import {Injectable} from '@angular/core'\nimport {createEffect, Actions, ofType} from '@ngrx/effects'\nimport {map, catchError, switchMap} from 'rxjs/operators'\nimport {of} from 'rxjs'\n\nimport {UserProfileService} from '../../services/userProfile.service'\nimport {\n  getUserProfileAction,\n  getUserProfileSuccessAction,\n  getUserProfileFailureAction\n} from '../actions/getUserProfile.action'\nimport {UserProfileInterface} from '../../types/userProfile.interface'\n\n@Injectable()\nexport class GetUserProfileEffect {\n  getUserProfile$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(getUserProfileAction),\n      switchMap(({slug}) => {\n        return this.userProfileService.getUserProfile(slug).pipe(\n          map((userProfile: UserProfileInterface) => {\n            return getUserProfileSuccessAction({userProfile})\n          }),\n\n          catchError(() => {\n            return of(getUserProfileFailureAction())\n          })\n        )\n      })\n    )\n  )\n\n  constructor(\n    private actions$: Actions,\n    private userProfileService: UserProfileService\n  ) {}\n}\n","import {UserProfileStateInterface} from '../types/userProfileState.interface'\nimport {createReducer, on, Action} from '@ngrx/store'\n\nimport {routerNavigationAction} from '@ngrx/router-store'\nimport {\n  getUserProfileAction,\n  getUserProfileSuccessAction,\n  getUserProfileFailureAction\n} from './actions/getUserProfile.action'\n\nconst initialState: UserProfileStateInterface = {\n  data: null,\n  isLoading: false,\n  error: null\n}\n\nconst userProfileReducer = createReducer(\n  initialState,\n  on(\n    getUserProfileAction,\n    (state): UserProfileStateInterface => ({\n      ...state,\n      isLoading: true\n    })\n  ),\n  on(\n    getUserProfileSuccessAction,\n    (state, action): UserProfileStateInterface => ({\n      ...state,\n      isLoading: false,\n      data: action.userProfile\n    })\n  ),\n  on(\n    getUserProfileFailureAction,\n    (state): UserProfileStateInterface => ({\n      ...state,\n      isLoading: false\n    })\n  )\n)\n\nexport function reducers(state: UserProfileStateInterface, action: Action) {\n  return userProfileReducer(state, action)\n}\n","import {createFeatureSelector, createSelector} from '@ngrx/store'\nimport {AppStateInterface} from 'src/app/shared/types/appState.interface'\nimport {UserProfileStateInterface} from 'src/app/userProfile/types/userProfileState.interface'\n\nexport const userProfileFeatureSelector = createFeatureSelector<\n  AppStateInterface,\n  UserProfileStateInterface\n>('userProfile')\n\nexport const userProfileSelector = createSelector(\n  userProfileFeatureSelector,\n  (userProfileState: UserProfileStateInterface) => userProfileState.data\n)\n\nexport const isLoadingSelector = createSelector(\n  userProfileFeatureSelector,\n  (userProfileState: UserProfileStateInterface) => userProfileState.isLoading\n)\n\nexport const errorSelector = createSelector(\n  userProfileFeatureSelector,\n  (userProfileState: UserProfileStateInterface) => userProfileState.error\n)\n","import {NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\nimport {RouterModule} from '@angular/router'\nimport {UserProfileComponent} from 'src/app/userProfile/components/userProfile/userProfile.component'\nimport {UserProfileService} from './services/userProfile.service'\nimport {EffectsModule} from '@ngrx/effects'\nimport {GetUserProfileEffect} from 'src/app/userProfile/store/effects/getUserProfile.effect'\nimport {StoreModule} from '@ngrx/store'\nimport {reducers} from 'src/app/userProfile/store/reducers'\nimport {FeedModule} from '../shared/modules/feed/feed.module'\n\nconst routes = [\n  {\n    path: 'profiles/:slug',\n    component: UserProfileComponent\n  },\n  {\n    path: 'profiles/:slug/favorites',\n    component: UserProfileComponent\n  }\n]\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    EffectsModule.forFeature([GetUserProfileEffect]),\n    StoreModule.forFeature('userProfile', reducers),\n    FeedModule\n  ],\n  declarations: [UserProfileComponent],\n  providers: [UserProfileService]\n})\nexport class UserProfileModule {}\n","import {Component} from '@angular/core'\n\n@Component({\n  selector: 'mc-your-feed',\n  templateUrl: './yourFeed.component.html',\n  styleUrls: ['./yourFeed.component.scss']\n})\nexport class YourFeedComponent {\n  apiUrl = '/articles/feed'\n}\n","<div class=\"home-page\">\n  <mc-banner></mc-banner>\n  <div class=\"container page\">\n    <div class=\"row\">\n      <div class=\"col-md-9\">\n        <mc-feed-toggler></mc-feed-toggler>\n        <mc-feed [apiUrl]=\"apiUrl\"></mc-feed>\n      </div>\n      <div class=\"col-md-3\">\n        <mc-popular-tags></mc-popular-tags>\n      </div>\n    </div>\n  </div>\n</div>\n","import {NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\nimport {RouterModule} from '@angular/router'\n\nimport {YourFeedComponent} from 'src/app/yourFeed/components/yourFeed/yourFeed.component'\nimport {FeedModule} from 'src/app/shared/modules/feed/feed.module'\nimport {BannerModule} from 'src/app/shared/modules/banner/banner.module'\nimport {PopularTagsModule} from '../shared/modules/popularTags/popularTags.module'\nimport {FeedTogglerModule} from 'src/app/shared/modules/feedToggler/feedToggler.module'\n\nconst routes = [\n  {\n    path: 'feed',\n    component: YourFeedComponent\n  }\n]\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    FeedModule,\n    BannerModule,\n    PopularTagsModule,\n    FeedTogglerModule\n  ],\n  declarations: [YourFeedComponent]\n})\nexport class YourFeedModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://conduit.productionready.io/api',\n  limit: 10\n}\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}